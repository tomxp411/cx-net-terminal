
; 64tass Turbo Assembler Macro V1.59.3120 listing file
; 64tass -o ANSI.PRG --list ANSI.LST --cbm-prg ANSI.ASM
; Wed May 01 01:21:15 2024

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: ANSI.ASM


;******  Processing file: KERNAL.ASM

=$ffe4					getin = $ffe4
=$ff62					screen_set_charset = $ff62
=$ff47					enter_basic = $ff47

;******  Return to file: ANSI.ASM

>0801	0b 08 0a 00 ce 90 3a 9e		.byte $0B,$08,$0A,$00,$CE,$90,$3A,$9E,$24,$38,$31,$30,$00,$00,$00
>0809	24 38 31 30 00 00 00
.0810					main:
.0810	20 1b 17	jsr $171b	    jsr ansi_init
.0813					test_start:
.0813	a9 72		lda #$72	    lda #<str_test
.0815	85 02		sta $02		    sta R0
.0817	a9 0a		lda #$0a	    lda #>str_test
.0819	85 03		sta $03		    sta R0+1
.081b					print_loop:
.081b	b2 02		lda ($02)	    lda (R0)
.081d	c9 01		cmp #$01	    cmp #$01
.081f	d0 03		bne $0824	    bne +
.0821	20 32 08	jsr $0832	    jsr draw_test
.0824	c9 1a		cmp #$1a	+   cmp #26 ; end of file marker
.0826	f0 28		beq $0850	    beq done
.0828					print_test:
.0828	20 95 17	jsr $1795	    jsr ansi_print_str
.082b					wait_for_key:
.082b	20 e4 ff	jsr $ffe4	-   jsr getin
.082e	f0 fb		beq $082b	    beq -
.0830	80 e9		bra $081b	    bra print_loop
.0832					draw_test:
.0832	a5 02		lda $02		    lda R0L
.0834	48		pha		    pha
.0835	a5 03		lda $03		    lda R0H
.0837	48		pha		    pha
.0838	a9 68		lda #$68	    lda #<test_grid
.083a	85 02		sta $02		    sta R0L
.083c	a9 08		lda #$08	    lda #>test_grid
.083e	85 03		sta $03		    sta R0H
.0840	20 95 17	jsr $1795	    jsr ansi_print_str
.0843	68		pla		    pla
.0844	85 03		sta $03		    sta R0H
.0846	68		pla		    pla
.0847	85 02		sta $02		    sta R0L
.0849	e6 02		inc $02		    inc R0L
.084b	d0 02		bne $084f	    bne +
.084d	e6 03		inc $03		    inc R0H
.084f	60		rts		+   rts
.0850					done:
.0850	4c 13 08	jmp $0813	    jmp test_start
.0853	00		brk #		    brk
>0854	00 00 00 00			.byte 0,0,0,0
.0858					press_key_text:
>0858	5b 50 72 65 73 73 20 41		    .text "[Press Any Key]",0
>0860	6e 79 20 4b 65 79 5d 00
.0868					test_grid:
>0868	1b 5b 32 4a 1b 5b 32 48		    .text 27,"[2J",27,"[2H",27,"[36m"
>0870	1b 5b 33 36 6d
>0875	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>087d	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>088d	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>089d	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>08ad	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>08bd	2e 2e 2c 2e 2e 2e 2e 38
>08c5	1b 5b 31 39 48			    .text 27,"[19H"
>08ca	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>08d2	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>08e2	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>08f2	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>0902	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>0912	2e 2e 2c 2e 2e 2e 2e 38
>091a	1b 5b 32 31 48			    .text 27,"[21H"
>091f	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>0927	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>0937	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>0947	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>0957	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>0967	2e 2e 2c 2e 2e 2e 2e 38
>096f	1b 5b 36 30 3b 37 30 48		    .text 27,"[60;70H"
>0977	37 2e 2e 2e 2e 2c 2e 2e		    .text "7....,....8"
>097f	2e 2e 38
>0982	1b 5b 48			    .text 27,"[H"
>0985	31 0d 0a 32 0d 0a 33 0d		    .text "1", $0d,$0a,"2", $0d,$0a,"3", $0d,$0a,"4", $0d,$0a,"5", $0d,$0a
>098d	0a 34 0d 0a 35 0d 0a
>0994	36 0d 0a 37 0d 0a 38 0d		    .text "6", $0d,$0a,"7", $0d,$0a,"8", $0d,$0a,"9", $0d,$0a,"10",$0d,$0a
>099c	0a 39 0d 0a 31 30 0d 0a
>09a4	31 31 0d 0a 31 32 0d 0a		    .text "11",$0d,$0a,"12",$0d,$0a,"13",$0d,$0a,"14",$0d,$0a,"15",$0d,$0a
>09ac	31 33 0d 0a 31 34 0d 0a 31 35 0d 0a
>09b8	31 36 0d 0a 31 37 0d 0a		    .text "16",$0d,$0a,"17",$0d,$0a,"18",$0d,$0a,"19",$0d,$0a,"20",$0d,$0a
>09c0	31 38 0d 0a 31 39 0d 0a 32 30 0d 0a
>09cc	32 31 0d 0a 32 32 0d 0a		    .text "21",$0d,$0a,"22",$0d,$0a,"23",$0d,$0a,"24",$0d,$0a,"25",$0d,$0a
>09d4	32 33 0d 0a 32 34 0d 0a 32 35 0d 0a
>09e0	32 36 0d 0a 32 37 0d 0a		    .text "26",$0d,$0a,"27",$0d,$0a,"28",$0d,$0a,"29",$0d,$0a,"30",$0d,$0a
>09e8	32 38 0d 0a 32 39 0d 0a 33 30 0d 0a
>09f4	33 31 0d 0a 33 32 0d 0a		    .text "31",$0d,$0a,"32",$0d,$0a,"33",$0d,$0a,"34",$0d,$0a,"35",$0d,$0a
>09fc	33 33 0d 0a 33 34 0d 0a 33 35 0d 0a
>0a08	33 36 0d 0a 33 37 0d 0a		    .text "36",$0d,$0a,"37",$0d,$0a,"38",$0d,$0a,"39",$0d,$0a,"40",$0d,$0a
>0a10	33 38 0d 0a 33 39 0d 0a 34 30 0d 0a
>0a1c	34 31 0d 0a 34 32 0d 0a		    .text "41",$0d,$0a,"42",$0d,$0a,"43",$0d,$0a,"44",$0d,$0a,"45",$0d,$0a
>0a24	34 33 0d 0a 34 34 0d 0a 34 35 0d 0a
>0a30	34 36 0d 0a 34 37 0d 0a		    .text "46",$0d,$0a,"47",$0d,$0a,"48",$0d,$0a,"49",$0d,$0a,"50",$0d,$0a
>0a38	34 38 0d 0a 34 39 0d 0a 35 30 0d 0a
>0a44	35 31 0d 0a 35 32 0d 0a		    .text "51",$0d,$0a,"52",$0d,$0a,"53",$0d,$0a,"54",$0d,$0a,"55",$0d,$0a
>0a4c	35 33 0d 0a 35 34 0d 0a 35 35 0d 0a
>0a58	35 36 0d 0a 35 37 0d 0a		    .text "56",$0d,$0a,"57",$0d,$0a,"58",$0d,$0a,"59",$0d,$0a,"60"
>0a60	35 38 0d 0a 35 39 0d 0a 36 30
>0a6a	1b 5b 48 1b 5b 30 6d		    .text 27,"[H",27,"[0m"
>0a71	00				    .byte 0
.0a72					str_test:
>0a72	1b 5b 32 4a 1b 5b 48		    .text 27,"[2J",27,"[H"
>0a79	1b 5b 32 3b 34 48		    .text 27,"[2;4H"
>0a7f	41 4e 53 49 20 43 6f 6e		    .text "ANSI Control and Escape Code Demo",$0d,$0a,$0a,$0a
>0a87	74 72 6f 6c 20 61 6e 64 20 45 73 63 61 70 65 20
>0a97	43 6f 64 65 20 44 65 6d 6f 0d 0a 0a 0a
>0aa4	54 68 69 73 20 77 69 6c		    .text "This will run several test sequences.",$0d,$0a
>0aac	6c 20 72 75 6e 20 73 65 76 65 72 61 6c 20 74 65
>0abc	73 74 20 73 65 71 75 65 6e 63 65 73 2e 0d 0a
>0acb	41 66 74 65 72 20 65 61		    .text "After each sequence, the test will pause.",$0d,$0a
>0ad3	63 68 20 73 65 71 75 65 6e 63 65 2c 20 74 68 65
>0ae3	20 74 65 73 74 20 77 69 6c 6c 20 70 61 75 73 65
>0af3	2e 0d 0a
>0af6	54 65 78 74 20 6f 6e 20		    .text "Text on the screen should tell you how",$0d,$0a
>0afe	74 68 65 20 73 63 72 65 65 6e 20 73 68 6f 75 6c
>0b0e	64 20 74 65 6c 6c 20 79 6f 75 20 68 6f 77 0d 0a
>0b1e	74 6f 20 69 6e 74 65 72		    .text "to interpret each test.",$0d,$0a,$0a
>0b26	70 72 65 74 20 65 61 63 68 20 74 65 73 74 2e 0d
>0b36	0a 0a
>0b38	46 6f 72 20 65 78 61 6d		    .text "For example:",$0d,$0a
>0b40	70 6c 65 3a 0d 0a
>0b46	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2",$0d,$0a
>0b4e	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 0d 0a
>0b5c	20 20 20 20 78 20 5b 78		    .text "    x [x is on column 5]",$0d,$0a
>0b64	20 69 73 20 6f 6e 20 63 6f 6c 75 6d 6e 20 35 5d
>0b74	0d 0a
>0b76	0d 0a				    .text $0d,$0a
>0b78	49 66 20 74 68 65 20 78		    .text "If the x is on column 5, then the test passes.",$0d,$0a
>0b80	20 69 73 20 6f 6e 20 63 6f 6c 75 6d 6e 20 35 2c
>0b90	20 74 68 65 6e 20 74 68 65 20 74 65 73 74 20 70
>0ba0	61 73 73 65 73 2e 0d 0a
>0ba8	0a 0a				    .byte 10,$0a
>0baa	41 66 74 65 72 20 63 6f		    .text "After confirming each test, press a key",$0d,$0a
>0bb2	6e 66 69 72 6d 69 6e 67 20 65 61 63 68 20 74 65
>0bc2	73 74 2c 20 70 72 65 73 73 20 61 20 6b 65 79 0d
>0bd2	0a
>0bd3	66 6f 72 20 74 68 65 20		    .text "for the next test.",$0d,$0a
>0bdb	6e 65 78 74 20 74 65 73 74 2e 0d 0a
>0be7	0a 0a				    .text $0a,$0a
>0be9	5b 50 72 65 73 73 20 61		    .text "[Press a key]"
>0bf1	20 6b 65 79 5d
>0bf6	00				    .byte 0
>0bf7	1b 5b 32 4a 1b 5b 31 3b		    .text 27,"[2J",27,"[1;15H"
>0bff	31 35 48
>0c02	1b 5b 39 37 6d 43 6f 6c		    .text 27,"[97mColor Test",13,10,10
>0c0a	6f 72 20 54 65 73 74 0d 0a 0a
>0c14	1b 5b 30 6d			    .text 27,"[0m"
>0c18	1b 5b 33 37 6d 33 37 20		    .text 27,"[37m37 WHITE    ",27,"[1m1 BOLD  ",13,10
>0c20	57 48 49 54 45 20 20 20 20 1b 5b 31 6d 31 20 42
>0c30	4f 4c 44 20 20 0d 0a
>0c37	1b 5b 33 36 6d 33 36 20		    .text 27,"[36m36 CYAN     ",27,"[1m1 BOLD  ",13,10
>0c3f	43 59 41 4e 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0c4f	4f 4c 44 20 20 0d 0a
>0c56	1b 5b 33 35 6d 33 35 20		    .text 27,"[35m35 MAGENTA  ",27,"[1m1 BOLD  ",13,10
>0c5e	4d 41 47 45 4e 54 41 20 20 1b 5b 31 6d 31 20 42
>0c6e	4f 4c 44 20 20 0d 0a
>0c75	1b 5b 33 34 6d 33 34 20		    .text 27,"[34m34 BLUE     ",27,"[1m1 BOLD  ",13,10
>0c7d	42 4c 55 45 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0c8d	4f 4c 44 20 20 0d 0a
>0c94	1b 5b 33 33 6d 33 33 20		    .text 27,"[33m33 YELLOW   ",27,"[1m1 BOLD  ",13,10
>0c9c	59 45 4c 4c 4f 57 20 20 20 1b 5b 31 6d 31 20 42
>0cac	4f 4c 44 20 20 0d 0a
>0cb3	1b 5b 33 32 6d 33 32 20		    .text 27,"[32m32 GREEN    ",27,"[1m1 BOLD  ",13,10
>0cbb	47 52 45 45 4e 20 20 20 20 1b 5b 31 6d 31 20 42
>0ccb	4f 4c 44 20 20 0d 0a
>0cd2	1b 5b 33 31 6d 33 31 20		    .text 27,"[31m31 RED      ",27,"[1m1 BOLD  ",13,10
>0cda	52 45 44 20 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0cea	4f 4c 44 20 20 0d 0a
>0cf1	1b 5b 34 34 6d			    .text 27,"[44m"
>0cf6	1b 5b 33 30 6d 33 30 20		    .text 27,"[30m30 BLACK    ",27,"[1m1 BOLD  ",13,10
>0cfe	42 4c 41 43 4b 20 20 20 20 1b 5b 31 6d 31 20 42
>0d0e	4f 4c 44 20 20 0d 0a
>0d15	1b 5b 34 39 6d			    .text 27,"[49m"
>0d1a	0a 0a				    .text $0a,$0a
>0d1c	1b 5b 33 39 6d 33 39 20		    .text 27,"[39m39 DEFAULT (white on black)",13,10
>0d24	44 45 46 41 55 4c 54 20 28 77 68 69 74 65 20 6f
>0d34	6e 20 62 6c 61 63 6b 29 0d 0a
>0d3e	0a 0a				    .text $0a,$0a
>0d40	1b 5b 39 37 6d 39 37 20		    .text 27,"[97m97 BRT WHITE",13,10
>0d48	42 52 54 20 57 48 49 54 45 0d 0a
>0d53	1b 5b 39 36 6d 39 36 20		    .text 27,"[96m96 BRT CYAN",13,10
>0d5b	42 52 54 20 43 59 41 4e 0d 0a
>0d65	1b 5b 39 35 6d 39 35 20		    .text 27,"[95m95 BRT MAGENTA",13,10
>0d6d	42 52 54 20 4d 41 47 45 4e 54 41 0d 0a
>0d7a	1b 5b 39 34 6d 39 34 20		    .text 27,"[94m94 BRT BLUE",13,10
>0d82	42 52 54 20 42 4c 55 45 0d 0a
>0d8c	1b 5b 39 33 6d 39 33 20		    .text 27,"[93m93 BRT YELLOW",13,10
>0d94	42 52 54 20 59 45 4c 4c 4f 57 0d 0a
>0da0	1b 5b 39 32 6d 39 32 20		    .text 27,"[92m92 BRT GREEN",13,10
>0da8	42 52 54 20 47 52 45 45 4e 0d 0a
>0db3	1b 5b 39 31 6d 39 31 20		    .text 27,"[91m91 BRT RED",13,10
>0dbb	42 52 54 20 52 45 44 0d 0a
>0dc4	1b 5b 39 30 6d 39 30 20		    .text 27,"[90m90 BRT BLACK",13,10
>0dcc	42 52 54 20 42 4c 41 43 4b 0d 0a
>0dd7	0a 0a				    .text $0a,$0a
>0dd9	1b 5b 33 30 3b 34 37 6d		    .text 27,"[30;47m47 BG WHITE   ",27,"[49m",13,10
>0de1	34 37 20 42 47 20 57 48 49 54 45 20 20 20 1b 5b
>0df1	34 39 6d 0d 0a
>0df6	1b 5b 33 30 3b 34 36 6d		    .text 27,"[30;46m46 BG CYAN    ",27,"[49m",13,10
>0dfe	34 36 20 42 47 20 43 59 41 4e 20 20 20 20 1b 5b
>0e0e	34 39 6d 0d 0a
>0e13	1b 5b 33 30 3b 34 35 6d		    .text 27,"[30;45m45 BG MAGENTA ",27,"[49m",13,10
>0e1b	34 35 20 42 47 20 4d 41 47 45 4e 54 41 20 1b 5b
>0e2b	34 39 6d 0d 0a
>0e30	1b 5b 33 30 3b 34 34 6d		    .text 27,"[30;44m44 BG BLUE    ",27,"[49m",13,10
>0e38	34 34 20 42 47 20 42 4c 55 45 20 20 20 20 1b 5b
>0e48	34 39 6d 0d 0a
>0e4d	1b 5b 33 30 3b 34 33 6d		    .text 27,"[30;43m43 BG YELLOW  ",27,"[49m",13,10
>0e55	34 33 20 42 47 20 59 45 4c 4c 4f 57 20 20 1b 5b
>0e65	34 39 6d 0d 0a
>0e6a	1b 5b 33 30 3b 34 32 6d		    .text 27,"[30;42m42 BG GREEN   ",27,"[49m",13,10
>0e72	34 32 20 42 47 20 47 52 45 45 4e 20 20 20 1b 5b
>0e82	34 39 6d 0d 0a
>0e87	1b 5b 33 30 3b 34 31 6d		    .text 27,"[30;41m41 BG RED     ",27,"[49m",13,10
>0e8f	34 31 20 42 47 20 52 45 44 20 20 20 20 20 1b 5b
>0e9f	34 39 6d 0d 0a
>0ea4	1b 5b 39 30 3b 34 30 6d		    .text 27,"[90;40m40 BG BLACK   ",27,"[49m",13,10
>0eac	34 30 20 42 47 20 42 4c 41 43 4b 20 20 20 1b 5b
>0ebc	34 39 6d 0d 0a
>0ec1	0a 0a				    .text $0a,$0a
>0ec3	1b 5b 33 39 6d 33 39 20		    .text 27,"[39m39 DEFAULT (white on black)",13,10
>0ecb	44 45 46 41 55 4c 54 20 28 77 68 69 74 65 20 6f
>0edb	6e 20 62 6c 61 63 6b 29 0d 0a
>0ee5	0a 0a				    .text $0a,$0a
>0ee7	1b 5b 33 37 6d 5b 1b 5b		    .text 27,"[37m[",27,"[93mA",27,"[37m]",27,"[32m Menu Item Test",13,10
>0eef	39 33 6d 41 1b 5b 33 37 6d 5d 1b 5b 33 32 6d 20
>0eff	4d 65 6e 75 20 49 74 65 6d 20 54 65 73 74 0d 0a
>0f0f	1b 5b 30 6d 30 20 52 45		    .text 27,"[0m0 RESET",13,10
>0f17	53 45 54 0d 0a
>0f1c	00				    .byte 0
>0f1d	1b 5b 39 37 6d			    .text 27,"[97m"
>0f22	1b 5b 32 4a 1b 5b 48 43		    .text 27,"[2J",27,"[HCursor movement test",13,10,10,10
>0f2a	75 72 73 6f 72 20 6d 6f 76 65 6d 65 6e 74 20 74
>0f3a	65 73 74 0d 0a 0a 0a
>0f41	1b 5b 33 31 6d			    .text 27,"[31m"
>0f46	1b 5b 35 48 43 55 55 20		    .text 27,"[5HCUU >",27,"[A< Up one line",13,10,10,10
>0f4e	3e 1b 5b 41 3c 20 55 70 20 6f 6e 65 20 6c 69 6e
>0f5e	65 0d 0a 0a 0a
>0f63	1b 5b 35 3b 33 30 48 43		    .text 27,"[5;30HCUU 1 >",27,"[1A< Up 1 line",13,10,10,10
>0f6b	55 55 20 31 20 3e 1b 5b 31 41 3c 20 55 70 20 31
>0f7b	20 6c 69 6e 65 0d 0a 0a 0a
>0f84	1b 5b 35 3b 36 30 48 43		    .text 27,"[5;60HCUU 2 >",27,"[2A< Up 2 lines",13,10
>0f8c	55 55 20 32 20 3e 1b 5b 32 41 3c 20 55 70 20 32
>0f9c	20 6c 69 6e 65 73 0d 0a
>0fa4	1b 5b 33 32 6d			    .text 27,"[32m"
>0fa9	1b 5b 31 30 48 43 55 44		    .text 27,"[10HCUD >",27,"[B< Down one line",13,10,10
>0fb1	20 3e 1b 5b 42 3c 20 44 6f 77 6e 20 6f 6e 65 20
>0fc1	6c 69 6e 65 0d 0a 0a
>0fc8	1b 5b 31 30 3b 33 30 48		    .text 27,"[10;30HCUD 1 >",27,"[B< Down one line",13,10,10
>0fd0	43 55 44 20 31 20 3e 1b 5b 42 3c 20 44 6f 77 6e
>0fe0	20 6f 6e 65 20 6c 69 6e 65 0d 0a 0a
>0fec	1b 5b 31 30 3b 36 30 48		    .text 27,"[10;60HCUD 2 >",27,"[2B< Down 2 lines",13,10,10
>0ff4	43 55 44 20 32 20 3e 1b 5b 32 42 3c 20 44 6f 77
>1004	6e 20 32 20 6c 69 6e 65 73 0d 0a 0a
>1010	1b 5b 33 33 6d			    .text 27,"[33m"
>1015	1b 5b 31 35 48 43 55 46		    .text 27,"[15HCUF >",27,"[C< One space gap",13,10,10
>101d	20 3e 1b 5b 43 3c 20 4f 6e 65 20 73 70 61 63 65
>102d	20 67 61 70 0d 0a 0a
>1034	43 55 46 20 31 20 3e 1b		    .text "CUF 1 >",27,"[C< One space gap",13,10,10
>103c	5b 43 3c 20 4f 6e 65 20 73 70 61 63 65 20 67 61
>104c	70 0d 0a 0a
>1050	43 55 46 20 32 20 3e 1b		    .text "CUF 2 >",27,"[2C< 2 space gap",13,10,10
>1058	5b 32 43 3c 20 32 20 73 70 61 63 65 20 67 61 70
>1068	0d 0a 0a
>106b	1b 5b 33 36 6d			    .text 27,"[36m"
>1070	43 55 42 20 3e 58 1b 5b		    .text "CUB >X",27,"[D< Should be no gap and no X",13,10,10
>1078	44 3c 20 53 68 6f 75 6c 64 20 62 65 20 6e 6f 20
>1088	67 61 70 20 61 6e 64 20 6e 6f 20 58 0d 0a 0a
>1097	43 55 42 20 31 20 3e 58		    .text "CUB 1 >X",27,"[1D< Should be no gap and no X",13,10,10
>109f	1b 5b 31 44 3c 20 53 68 6f 75 6c 64 20 62 65 20
>10af	6e 6f 20 67 61 70 20 61 6e 64 20 6e 6f 20 58 0d
>10bf	0a 0a
>10c1	43 55 42 20 32 20 3e 58		    .text "CUB 2 >XX",27,"[2D< Should be no gap and no X",13,10,10
>10c9	58 1b 5b 32 44 3c 20 53 68 6f 75 6c 64 20 62 65
>10d9	20 6e 6f 20 67 61 70 20 61 6e 64 20 6e 6f 20 58
>10e9	0d 0a 0a
>10ec	0a 0a				    .byte $0a,$0a
>10ee	00				    .byte 0
>10ef	01				    .byte 1
>10f0	1b 5b 32 4a			    .text 27,"[2J"
>10f4	1b 5b 48			    .text 27,"[H"
>10f7	1b 5b 30 6d			    .text 27,"[0m"
>10fb	43 6f 6e 74 72 6f 6c 20		    .text "Control character test",$0d,$0a,$0a
>1103	63 68 61 72 61 63 74 65 72 20 74 65 73 74 0d 0a
>1113	0a
>1114	24 30 37 20 42 45 4c 4c		    .text "$07 BELL: Play a tone",$0d,$0a
>111c	3a 20 50 6c 61 79 20 61 20 74 6f 6e 65 0d 0a
>112b	07 44 69 6e 67 20 5b 50		    .text $07,"Ding [Pass if you heard a 'ding' sound.]",$0d,$0a
>1133	61 73 73 20 69 66 20 79 6f 75 20 68 65 61 72 64
>1143	20 61 20 27 64 69 6e 67 27 20 73 6f 75 6e 64 2e
>1153	5d 0d 0a
>1156	0a 0a				    .byte $0a,$0a
>1158	00				    .byte 0
>1159	24 30 38 20 42 53 3a 20		    .text "$08 BS: Backspace",$0d,$0a
>1161	42 61 63 6b 73 70 61 63 65 0d 0a
>116c	42 61 63 6b 73 70 61 63		    .text "Backspace test [should say 'pass' twice]: failpass"
>1174	65 20 74 65 73 74 20 5b 73 68 6f 75 6c 64 20 73
>1184	61 79 20 27 70 61 73 73 27 20 74 77 69 63 65 5d
>1194	3a 20 66 61 69 6c 70 61 73 73
>119e	08 08 08 08 08 08 08 08		    .text $08,$08,$08,$08,$08,$08,$08,$08,"pass",$0d,$0a
>11a6	70 61 73 73 0d 0a
>11ac	0a 0a				    .byte $0a,$0a
>11ae	00				    .byte 0
>11af	24 30 39 20 48 54 3a 20		    .text "$09 HT: Horizontal tab",$0d,$0a
>11b7	48 6f 72 69 7a 6f 6e 74 61 6c 20 74 61 62 0d 0a
>11c7	20 20 20 20 20 20 20 20		    .text "         |         |         |         |",$0d,$0a
>11cf	20 7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20
>11df	20 20 20 20 20 7c 20 20 20 20 20 20 20 20 20 7c
>11ef	0d 0a
>11f1	62 61 72 73 09 7c 73 68		    .text "bars",9,"|should",9,"|line",9,"|up",9,"|",$0d,$0a
>11f9	6f 75 6c 64 09 7c 6c 69 6e 65 09 7c 75 70 09 7c
>1209	0d 0a
>120b	0a 0a				    .byte $0a,$0a
>120d	00				    .byte 0
>120e	24 31 30 20 4c 46 3a 20		    .text "$10 LF: moves the cursor down one line",$0d,$0a
>1216	6d 6f 76 65 73 20 74 68 65 20 63 75 72 73 6f 72
>1226	20 64 6f 77 6e 20 6f 6e 65 20 6c 69 6e 65 0d 0a
>1236	4c 69 6e 65 20 31 20 5c		    .text "Line 1 ",$5C,$0a
>123e	0a
>123f	5c 20 4c 69 6e 65 20 32		    .text         $5C," Line 2",$0d,$0a
>1247	0d 0a
>1249	54 68 65 20 62 61 63 6b		    .text "The backslashes should line up."
>1251	73 6c 61 73 68 65 73 20 73 68 6f 75 6c 64 20 6c
>1261	69 6e 65 20 75 70 2e
>1268	0d 0a 0a			    .text $0d,$0a,$0a
>126b	00				    .byte 0
>126c	24 31 33 20 43 52 3a 20		    .text "$13 CR: move to start of line",$0d,$0a,$0a
>1274	6d 6f 76 65 20 74 6f 20 73 74 61 72 74 20 6f 66
>1284	20 6c 69 6e 65 0d 0a 0a
>128c	20 20 20 20 20 20 20 20		    .text "          <- CR TEST [should be on same line]",$0d
>1294	20 20 3c 2d 20 43 52 20 54 45 53 54 20 5b 73 68
>12a4	6f 75 6c 64 20 62 65 20 6f 6e 20 73 61 6d 65 20
>12b4	6c 69 6e 65 5d 0d
>12ba	43 52 20 54 45 53 54 20		    .text "CR TEST ->",$0D,$0A
>12c2	2d 3e 0d 0a
>12c6	0a 0a				    .byte $0a,$0a
>12c8	00				    .byte 0
>12c9	01				    .byte 1
>12ca	1b 5b 48 c5 20 48 4f 4d		    .text 27,"[H",$c5," HOME POSITION",$0D,$0A
>12d2	45 20 50 4f 53 49 54 49 4f 4e 0d 0a
>12de	00 01				    .byte 0,1
>12e0	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H",$c5," Row 20 Col 40",$0d,$0a
>12e8	c5 20 52 6f 77 20 32 30 20 43 6f 6c 20 34 30 0d
>12f8	0a
>12f9	00 01				    .byte 0,1
>12fb	1b 5b 36 30 3b 38 30 48		    .text 27,"[60;80H",$c5
>1303	c5
>1304	1b 5b 36 30 3b 36 35 48		    .text 27,"[60;65HRow 60 Col 80"
>130c	52 6f 77 20 36 30 20 43 6f 6c 20 38 30
>1319	00 01				    .byte 0,1
>131b	1b 5b 34 3b 35 48 c5 20		    .text 27,"[4;5H",$c5," Row 4 Col 5",$0d,$0a
>1323	52 6f 77 20 34 20 43 6f 6c 20 35 0d 0a
>1330	00 01				    .byte 0,1
>1332	1b 5b 31 30 48 2b 20 4c		    .text 27,"[10H+ Line 10, column 1 (no column)"
>133a	69 6e 65 20 31 30 2c 20 63 6f 6c 75 6d 6e 20 31
>134a	20 28 6e 6f 20 63 6f 6c 75 6d 6e 29
>1356	00 01				    .byte 0,1
>1358	1b 5b 3b 34 30 48 2b 20		    .text 27,"[;40H+ Col 40 (no row)  "
>1360	43 6f 6c 20 34 30 20 28 6e 6f 20 72 6f 77 29 20
>1370	20
>1371	00				    .byte 0
>1372	1b 5b 32 4a 1b 5b 48		    .text 27,"[2J",27,"[H"
>1379	1b 5b 32 3b 36 35 48 4e		    .text 27,"[2;65HNo-wrap test. -[Not visible]>"
>1381	6f 2d 77 72 61 70 20 74 65 73 74 2e 20 2d 5b 4e
>1391	6f 74 20 76 69 73 69 62 6c 65 5d 3e
>139d	1b 5b 33 48 4e 6f 2d 57		    .text 27,"[3HNo-Wrap test: > char should be on",$0d,$0A
>13a5	72 61 70 20 74 65 73 74 3a 20 3e 20 63 68 61 72
>13b5	20 73 68 6f 75 6c 64 20 62 65 20 6f 6e 0d 0a
>13c4	72 69 67 68 74 20 65 64		    .text "right edge and [Not visible] should not",$0d,$0a
>13cc	67 65 20 61 6e 64 20 5b 4e 6f 74 20 76 69 73 69
>13dc	62 6c 65 5d 20 73 68 6f 75 6c 64 20 6e 6f 74 0d
>13ec	0a
>13ed	62 65 20 76 69 73 69 62		    .text "be visible.",$0d,$0a
>13f5	6c 65 2e 0d 0a
>13fa	00				    .byte 0
>13fb	1b 5b 32 4a			    .text 27,"[2J"
>13ff	1b 5b 48			    .text 27,"[H"
>1402	1b 42 61 64 20 65 73 63		    .text 27,"Bad escape code tests:",$0d,$0a
>140a	61 70 65 20 63 6f 64 65 20 74 65 73 74 73 3a 0d
>141a	0a
>141b	1b 48 20 6d 69 73 73 69		    .text 27,"H missing [ in escape code",$0d,$0a
>1423	6e 67 20 5b 20 69 6e 20 65 73 63 61 70 65 20 63
>1433	6f 64 65 0d 0a
>1438	1b 5b 5a 20 69 6e 76 61		    .text 27,"[Z invalid command in escape code",$0d,$0a
>1440	6c 69 64 20 63 6f 6d 6d 61 6e 64 20 69 6e 20 65
>1450	73 63 61 70 65 20 63 6f 64 65 0d 0a
>145c	00				    .byte 0
>145d	01				    .byte 1
>145e	1b 5b 32 30 3b 32 30 48		    .text 27,"[20;20H"
>1466	1b 5b 33 33 6d			    .text 27,"[33m"
>146b	45 44 20 20 63 75 72 73		    .text "ED  cursor to end ->"
>1473	6f 72 20 74 6f 20 65 6e 64 20 2d 3e
>147f	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>1487	1b 5b 39 30 6d			    .text 27,"[90m"
>148c	5b 54 68 69 73 20 74 65		    .text "[This text should disappear]"
>1494	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>14a4	65 61 72 5d
>14a8	00				    .byte 0
>14a9	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>14b1	1b 5b 30 4a			    .text 27,"[0J"
>14b5	00				    .byte 0
>14b6	01				    .byte 1
>14b7	1b 5b 32 30 3b 31 37 48		    .text 27,"[20;17H"
>14bf	1b 5b 39 30 6d			    .text 27,"[90m"
>14c4	5b 54 68 69 73 20 73 68		    .text "[This should disappear]"
>14cc	6f 75 6c 64 20 64 69 73 61 70 70 65 61 72 5d
>14db	1b 5b 33 33 6d			    .text 27,"[33m"
>14e0	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>14e8	3c 2d 20 45 44 20 73 74		    .text "<- ED start to cursor",$0D,$0A
>14f0	61 72 74 20 74 6f 20 63 75 72 73 6f 72 0d 0a
>14ff	1b 5b 36 30 3b 35 34 48		    .text 27,"[60;54H"
>1507	54 68 69 73 20 73 68 6f		    .text "This should remain visible."
>150f	75 6c 64 20 72 65 6d 61 69 6e 20 76 69 73 69 62
>151f	6c 65 2e
>1522	00				    .byte 0
>1523	1b 5b 32 30 3b 33 39 48		    .text 27,"[20;39H"
>152b	1b 5b 31 4a			    .text 27,"[1J"
>152f	00				    .byte 0
>1530	1b 5b 32 4a			    .text 27,"[2J"
>1534	1b 5b 31 30 3b 32 37 48		    .text 27,"[10;27H   Erase full screen"
>153c	20 20 20 45 72 61 73 65 20 66 75 6c 6c 20 73 63
>154c	72 65 65 6e
>1550	1b 5b 31 31 3b 32 37 48		    .text 27,"[11;27H Screen should be clear"
>1558	20 53 63 72 65 65 6e 20 73 68 6f 75 6c 64 20 62
>1568	65 20 63 6c 65 61 72
>156f	1b 5b 31 32 3b 32 37 48		    .text 27,"[12;27H[Aside from this message]"
>1577	5b 41 73 69 64 65 20 66 72 6f 6d 20 74 68 69 73
>1587	20 6d 65 73 73 61 67 65 5d
>1590	00				    .byte 0
>1591	01				    .byte 1
>1592	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>159a	1b 5b 33 33 6d			    .text 27,"[33m"
>159f	45 4c 20 63 75 72 73 6f		    .text "EL cursor to to end of line ->"
>15a7	72 20 74 6f 20 74 6f 20 65 6e 64 20 6f 66 20 6c
>15b7	69 6e 65 20 2d 3e
>15bd	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>15c5	1b 5b 39 30 6d			    .text 27,"[90m"
>15ca	5b 54 68 69 73 20 74 65		    .text "[This text should disappear]"
>15d2	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>15e2	65 61 72 5d
>15e6	00				    .byte 0
>15e7	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>15ef	1b 5b 30 4b			    .text 27,"[0K"
>15f3	00				    .byte 0
>15f4	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>15fc	1b 5b 39 30 6d			    .text 27,"[90m"
>1601	20 20 54 68 69 73 20 74		    .text "  This text should disappear ->"
>1609	65 78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70
>1619	70 65 61 72 20 2d 3e
>1620	1b 5b 32 30 3b 34 31 48		    .text 27,"[20;41H"
>1628	1b 5b 33 33 6d			    .text 27,"[33m"
>162d	3c 2d 20 45 4c 20 73 74		    .text "<- EL start to cursor"
>1635	61 72 74 20 74 6f 20 63 75 72 73 6f 72
>1642	00				    .byte 0
>1643	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>164b	1b 5b 31 4b			    .text 27,"[1K"
>164f	00				    .byte 0
>1650	1b 5b 32 30 48			    .text 27,"[20H"
>1655	1b 5b 33 36 6d			    .text 27,"[36m"
>165a	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>1662	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>1672	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>1682	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>1692	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>16a2	2e 2e 2c 2e 2e 2e 2e 38
>16aa	1b 5b 32 30 3b 31 38 48		    .text 27,"[20;18H"
>16b2	1b 5b 33 33 6d			    .text 27,"[33m"
>16b7	5b 45 4c 20 65 6e 74 69		    .text "[EL entire line. This text should disappear]"
>16bf	72 65 20 6c 69 6e 65 2e 20 54 68 69 73 20 74 65
>16cf	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>16df	65 61 72 5d
>16e3	00				    .byte 0
>16e4	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>16ec	1b 5b 32 4b			    .text 27,"[2K"
>16f0	00				    .byte 0
>16f1	01				    .byte 1
>16f2	1b 5b 32 39 3b 32 37 48		    .text 27,"[29;27HPress a key to restart test"
>16fa	50 72 65 73 73 20 61 20 6b 65 79 20 74 6f 20 72
>170a	65 73 74 61 72 74 20 74 65 73 74
>1715	00				    .byte 0
>1716	1a 00 00 00 00			    .byte 26,0,0,0,0

;******  Processing file: ANSI_DRIVER.ASM

=$b000					ScrnAdr = $B000  ; Address of screen buffer in VERA
=$9f20					vera_addr0 = $9f20    ; low byte of display address (col)
=$9f21					vera_addr1 = $9f21    ; middle byte of display address (row)
=$9f22					vera_addr2 = $9f22    ; high byte of display address (bank + increment)
=$9f23					vera_data0 = $9f23    ; VERA data port 0
=$9f24					vera_data1 = $9f24    ; VERA data port 1
=$9f25					vera_dcsel = $9f25    ; VERA data select register
=$ff6e					jsrfar = $FF6E
=$00					bank_select_ram = $00
=$01					bank_select_rom = $01
=$0a					bank_audio = $0A
=$c063					ym_init = $C063
=$c003					bas_fmnote = $C003
=$c000					bas_fmfreq = $c000
=$c00f					bas_psgfreq = $c00f
=$c069					ym_loadpatch = $c069
=$02					R0      = $02
=$02					R0L     = $02
=$03					R0H     = $03
=$04					R1      = $04
=$04					R1L     = $04
=$05					R1H     = $05
=$04					R2      = $04
=$04					R2L     = $04
=$05					R2H     = $05
=$11					colors_bank = $11   ;incr=1, bank=1
=$fa00					colors_addr = $FA00
=$07					default_color_fg = $07
=$00					default_color_bg = $00
=$02					ansi_strptr   = R0  ; string pointer for prints procedure
.171b					ansi_init:
.171b	a9 0f		lda #$0f	    lda #15     ; ISO mode PETSCII character
.171d	20 d2 ff	jsr $ffd2	    jsr $FFD2   ; print it
.1720	a9 07		lda #$07	    lda #7
.1722	20 62 ff	jsr $ff62	    jsr $ff62 ; screen_set_charset
.1725	a9 00		lda #$00	    lda #<colors_addr
.1727	8d 20 9f	sta $9f20	    sta vera_addr0
.172a	a9 fa		lda #$fa	    lda #>colors_addr
.172c	8d 21 9f	sta $9f21	    sta vera_addr1
.172f	a9 11		lda #$11	    lda #colors_bank
.1731	8d 22 9f	sta $9f22	    sta vera_addr2
.1734	a2 00		ldx #$00	    ldx #0
.1736	bd d4 1b	lda $1bd4,x	-   lda palette_data, x
.1739	8d 23 9f	sta $9f23	    sta vera_data0
.173c	e8		inx		    inx
.173d	e0 20		cpx #$20	    cpx #palette_end - palette_data
.173f	90 f5		bcc $1736	    bcc -
.1741	9c 3d 1b	stz $1b3d	    stz cur_mode        ; reset colors and attributes
.1744	a9 07		lda #$07	    lda #default_color_fg  ; default color is white on black
.1746	8d 3b 1b	sta $1b3b	    sta cur_color
.1749	20 6e ff	jsr $ff6e	    jsr jsrfar  ; $FF6E
>174c	63 c0				    .word ym_init ; $C063
>174e	0a				    .byte bank_audio
.174f	a2 0d		ldx #$0d	    ldx #$0d
.1751	38		sec		    sec
.1752	20 6e ff	jsr $ff6e	    jsr jsrfar
>1755	69 c0				    .word ym_loadpatch
>1757	0a				    .byte bank_audio
.1758	60		rts		    rts
.1759					ansi_locate:
.1759	48		pha		    pha
.175a	8e 37 1b	stx $1b37	    stx csr_col
.175d	8c 38 1b	sty $1b38	    sty csr_row
.1760	20 65 17	jsr $1765	    jsr load_addr_vector
.1763	68		pla		    pla
.1764	60		rts		    rts
.1765					load_addr_vector:
.1765	9c 25 9f	stz $9f25	    stz vera_dcsel        ; work with data port 0
.1768	ad 37 1b	lda $1b37	    lda csr_col
.176b	0a		asl a		    asl A
.176c	8d 20 9f	sta $9f20	    sta vera_addr0
.176f	ad 38 1b	lda $1b38	    lda csr_row
.1772	18		clc		    clc
.1773	6d 3a 1b	adc $1b3a	    adc csr_base
.1776	8d 21 9f	sta $9f21	    sta vera_addr1
.1779	ad 39 1b	lda $1b39	    lda csr_bank
.177c	8d 22 9f	sta $9f22	    sta vera_addr2
.177f	60		rts		    rts
.1780					save_addr_vector:
.1780	9c 25 9f	stz $9f25	    stz vera_dcsel        ; work with data port 0
.1783	ad 20 9f	lda $9f20	    lda vera_addr0
.1786	4a		lsr a		    lsr A
.1787	8d 37 1b	sta $1b37	    sta csr_col
.178a	ad 21 9f	lda $9f21	    lda vera_addr1
.178d	38		sec		    sec
.178e	ed 3a 1b	sbc $1b3a	    sbc csr_base
.1791	8d 38 1b	sta $1b38	    sta csr_row
.1794	60		rts		    rts
.1795					ansi_print_str:
.1795	20 65 17	jsr $1765	    jsr load_addr_vector
.1798					prints_loop:
.1798	b2 02		lda ($02)	    lda (ansi_strptr)
.179a	f0 0b		beq $17a7	    beq prints_done
.179c	20 ae 17	jsr $17ae	    jsr ansi_chrout
.179f	e6 02		inc $02		        inc ansi_strptr
.17a1	d0 02		bne $17a5	        bne +
.17a3	e6 03		inc $03		        inc ansi_strptr+1
.17a5					    +
.17a5	80 f1		bra $1798	    bra prints_loop
.17a7					prints_done:
.17a7	e6 02		inc $02		        inc ansi_strptr
.17a9	d0 02		bne $17ad	        bne +
.17ab	e6 03		inc $03		        inc ansi_strptr+1
.17ad					    +
.17ad	60		rts		    rts
.17ae					ansi_chrout:
.17ae	ac 42 1b	ldy $1b42	    ldy param_index
.17b1	c0 01		cpy #$01	    cpy #1
.17b3	f0 75		beq $182a	    beq chrout_read_param
.17b5	90 03		bcc $17ba	    bcc +
.17b7	4c 3a 18	jmp $183a	    jmp chrout_test_semi
.17ba	c9 20		cmp #$20	+   cmp #' '
.17bc	90 30		bcc $17ee	    bcc do_control_char
.17be					just_print:
.17be	8d 23 9f	sta $9f23	    sta vera_data0
.17c1	ad 3b 1b	lda $1b3b	    lda cur_color   ; get the current color
.17c4	8d 23 9f	sta $9f23	    sta vera_data0
.17c7	ee 37 1b	inc $1b37	    inc csr_col     ; moves cursor to the right one position
.17ca					check_bounds:
.17ca	ad 37 1b	lda $1b37	    lda csr_col
.17cd	cd 3e 1b	cmp $1b3e	    cmp col_count
.17d0	90 07		bcc $17d9	    bcc check_row
.17d2	ad 3e 1b	lda $1b3e	    lda col_count
.17d5	3a		dec a		    dec A
.17d6	8d 37 1b	sta $1b37	    sta csr_col
.17d9					check_row:
.17d9	ad 38 1b	lda $1b38	    lda csr_row
.17dc	cd 3f 1b	cmp $1b3f	    cmp row_count
.17df	90 09		bcc $17ea	    bcc check_done
.17e1	ad 38 1b	lda $1b38	    lda csr_row
.17e4	38		sec		    sec
.17e5	e9 01		sbc #$01	    sbc #$01
.17e7	8d 38 1b	sta $1b38	    sta csr_row
.17ea					check_done:
.17ea	20 65 17	jsr $1765	    jsr load_addr_vector
.17ed					chrout_done:
.17ed	60		rts		    rts
.17ee					do_control_char:
.17ee	c9 1b		cmp #$1b	    cmp #$1B ; ESC
.17f0	d0 06		bne $17f8	    bne +
.17f2	ee 42 1b	inc $1b42	    inc param_index
.17f5	4c ed 17	jmp $17ed	    jmp chrout_done
.17f8	c9 0a		cmp #$0a	+   cmp #$0A ; Line Feed
.17fa	d0 09		bne $1805	    bne +
.17fc	ee 38 1b	inc $1b38	    inc csr_row
.17ff	20 65 17	jsr $1765	    jsr load_addr_vector
.1802	4c ca 17	jmp $17ca	    jmp check_bounds
.1805	c9 0d		cmp #$0d	+   cmp #$0D ;CR
.1807	d0 09		bne $1812	    bne +
.1809	9c 37 1b	stz $1b37	    stz csr_col
.180c	20 65 17	jsr $1765	    jsr load_addr_vector
.180f	4c ca 17	jmp $17ca	    jmp check_bounds
.1812	c9 07		cmp #$07	+   cmp #$07 ; bell
.1814	d0 03		bne $1819	    bne +
.1816	4c 14 1a	jmp $1a14	    jmp do_bell
.1819	c9 08		cmp #$08	+   cmp #$08 ; backspace
.181b	d0 03		bne $1820	    bne +
.181d	4c 28 1a	jmp $1a28	    jmp do_bs
.1820	c9 09		cmp #$09	+   cmp #$09 ; tab
.1822	d0 03		bne $1827	    bne +
.1824	4c 37 1a	jmp $1a37	    jmp do_tab
.1827	4c be 17	jmp $17be	+   jmp just_print
.182a					chrout_read_param:
.182a	c9 5b		cmp #$5b	    cmp #'['
.182c	d0 06		bne $1834	    bne +
.182e	ee 42 1b	inc $1b42	    inc param_index
.1831	4c ed 17	jmp $17ed	    jmp chrout_done
.1834					+
.1834	9c 42 1b	stz $1b42	    stz param_index
.1837	4c be 17	jmp $17be	    jmp just_print
.183a					chrout_test_semi:
.183a	c9 3b		cmp #$3b	    cmp #';'
.183c	d0 06		bne $1844	    bne chrout_test_number
.183e	ee 42 1b	inc $1b42	    inc param_index
.1841	4c ed 17	jmp $17ed	    jmp chrout_done
.1844					chrout_test_number:
.1844	c9 30		cmp #$30	    cmp #'0'
.1846	90 24		bcc $186c	    bcc chrout_not_number
.1848	c9 3a		cmp #$3a	    cmp #'9'+1
.184a	b0 20		bcs $186c	    bcs chrout_not_number
.184c	38		sec		    sec
.184d	e9 30		sbc #$30	    sbc #'0'
.184f	8d 48 1b	sta $1b48	    sta digit_1
.1852	b9 42 1b	lda $1b42,y	    lda parameters,Y
.1855	0a		asl a		    asl
.1856	0a		asl a		    asl
.1857	0a		asl a		    asl
.1858	8d 4d 1b	sta $1b4d	    sta mult_1
.185b	b9 42 1b	lda $1b42,y	    lda parameters,Y
.185e	0a		asl a		    asl
.185f	18		clc		    clc
.1860	6d 4d 1b	adc $1b4d	    adc mult_1
.1863	6d 48 1b	adc $1b48	    adc digit_1
.1866	99 42 1b	sta $1b42,y	    sta parameters,Y
.1869	4c ed 17	jmp $17ed	    jmp chrout_done
.186c					chrout_not_number:
.186c	4c 6f 18	jmp $186f	    jmp do_CSI
.186f					do_CSI:
.186f	c9 41		cmp #$41	    cmp #'A'
.1871	f0 29		beq $189c	    beq do_CUU
.1873	c9 42		cmp #$42	    cmp #'B'
.1875	f0 3d		beq $18b4	    beq do_CUD
.1877	c9 43		cmp #$43	    cmp #'C'
.1879	f0 51		beq $18cc	    beq do_CUF
.187b	c9 44		cmp #$44	    cmp #'D'
.187d	f0 65		beq $18e4	    beq do_CUB
.187f	c9 66		cmp #$66	    cmp #'f'
.1881	f0 79		beq $18fc	    beq do_CUP
.1883	c9 48		cmp #$48	    cmp #'H'
.1885	f0 75		beq $18fc	    beq do_CUP
.1887	c9 4a		cmp #$4a	    cmp #'J'
.1889	d0 03		bne $188e	    bne +
.188b	4c 67 19	jmp $1967	    jmp do_ED
.188e					+
.188e	c9 4b		cmp #$4b	    cmp #'K'
.1890	f0 7c		beq $190e	    beq do_EL
.1892	c9 6d		cmp #$6d	    cmp #'m'
.1894	d0 03		bne $1899	    bne +
.1896	4c 4a 1a	jmp $1a4a	    jmp do_SGR
.1899					+
.1899	4c 21 1b	jmp $1b21	    jmp cmd_done
.189c					do_CUU:
.189c	ad 44 1b	lda $1b44	    lda param_1
.189f	f0 0d		beq $18ae	    beq +
.18a1	ad 38 1b	lda $1b38	    lda csr_row
.18a4	38		sec		    sec
.18a5	ed 44 1b	sbc $1b44	    sbc param_1
.18a8	8d 38 1b	sta $1b38	    sta csr_row
.18ab	4c 21 1b	jmp $1b21	    jmp cmd_done
.18ae	ce 38 1b	dec $1b38	+   dec csr_row
.18b1	4c 21 1b	jmp $1b21	    jmp cmd_done
.18b4					do_CUD:
.18b4	ad 44 1b	lda $1b44	    lda param_1
.18b7	f0 0d		beq $18c6	    beq +
.18b9	ad 38 1b	lda $1b38	    lda csr_row
.18bc	18		clc		    clc
.18bd	6d 44 1b	adc $1b44	    adc param_1
.18c0	8d 38 1b	sta $1b38	    sta csr_row
.18c3	4c 21 1b	jmp $1b21	    jmp cmd_done
.18c6	ee 38 1b	inc $1b38	+   inc csr_row
.18c9	4c 21 1b	jmp $1b21	    jmp cmd_done
.18cc					do_CUF:
.18cc	ad 44 1b	lda $1b44	    lda param_1
.18cf	f0 0d		beq $18de	    beq +
.18d1	ad 37 1b	lda $1b37	    lda csr_col
.18d4	18		clc		    clc
.18d5	6d 44 1b	adc $1b44	    adc param_1
.18d8	8d 37 1b	sta $1b37	    sta csr_col
.18db	4c 21 1b	jmp $1b21	    jmp cmd_done
.18de	ee 37 1b	inc $1b37	+   inc csr_col
.18e1	4c 21 1b	jmp $1b21	    jmp cmd_done
.18e4					do_CUB:
.18e4	ad 44 1b	lda $1b44	    lda param_1
.18e7	f0 0d		beq $18f6	    beq +
.18e9	ad 37 1b	lda $1b37	    lda csr_col
.18ec	38		sec		    sec
.18ed	ed 44 1b	sbc $1b44	    sbc param_1
.18f0	8d 37 1b	sta $1b37	    sta csr_col
.18f3	4c 21 1b	jmp $1b21	    jmp cmd_done
.18f6	ce 37 1b	dec $1b37	+   dec csr_col
.18f9	4c 21 1b	jmp $1b21	    jmp cmd_done
.18fc					do_CUP:
.18fc	ae 45 1b	ldx $1b45	    ldx param_2
.18ff	f0 01		beq $1902	    beq +
.1901	ca		dex		    dex
.1902	ac 44 1b	ldy $1b44	+   ldy param_1
.1905	f0 01		beq $1908	    beq +
.1907	88		dey		    dey
.1908	20 59 17	jsr $1759	+   jsr ansi_locate
.190b	4c 21 1b	jmp $1b21	    jmp cmd_done
.190e					do_EL:
.190e	ad 44 1b	lda $1b44	    lda param_1
.1911	d0 1c		bne $192f	    bne +
.1913	ad 37 1b	lda $1b37	    lda csr_col
.1916	8d 49 1b	sta $1b49	    sta start_col
.1919	ad 38 1b	lda $1b38	    lda csr_row
.191c	8d 4a 1b	sta $1b4a	    sta start_row
.191f	ad 3e 1b	lda $1b3e	    lda col_count
.1922	3a		dec a		    dec a
.1923	8d 4b 1b	sta $1b4b	    sta end_col
.1926	ad 38 1b	lda $1b38	    lda csr_row
.1929	8d 4c 1b	sta $1b4c	    sta end_row
.192c	4c bf 19	jmp $19bf	    jmp do_erase
.192f	c9 01		cmp #$01	+   cmp #1
.1931	d0 18		bne $194b	    bne +
.1933	9c 49 1b	stz $1b49	    stz start_col
.1936	ad 38 1b	lda $1b38	    lda csr_row
.1939	8d 4a 1b	sta $1b4a	    sta start_row
.193c	ad 37 1b	lda $1b37	    lda csr_col
.193f	8d 4b 1b	sta $1b4b	    sta end_col
.1942	ad 38 1b	lda $1b38	    lda csr_row
.1945	8d 4c 1b	sta $1b4c	    sta end_row
.1948	4c bf 19	jmp $19bf	    jmp do_erase
.194b	c9 02		cmp #$02	+   cmp #2
.194d	d0 39		bne $1988	    bne +
.194f	9c 49 1b	stz $1b49	    stz start_col
.1952	ad 38 1b	lda $1b38	    lda csr_row
.1955	8d 4a 1b	sta $1b4a	    sta start_row
.1958	ad 3e 1b	lda $1b3e	    lda col_count
.195b	8d 4b 1b	sta $1b4b	    sta end_col
.195e	ad 38 1b	lda $1b38	    lda csr_row
.1961	8d 4c 1b	sta $1b4c	    sta end_row
.1964	4c bf 19	jmp $19bf	    jmp do_erase
.1967					do_ED:
.1967	ad 44 1b	lda $1b44	    lda param_1
.196a	d0 1c		bne $1988	    bne +
.196c	ad 37 1b	lda $1b37	    lda csr_col
.196f	8d 49 1b	sta $1b49	    sta start_col
.1972	ad 38 1b	lda $1b38	    lda csr_row
.1975	8d 4a 1b	sta $1b4a	    sta start_row
.1978	ad 3e 1b	lda $1b3e	    lda col_count
.197b	8d 4b 1b	sta $1b4b	    sta end_col
.197e	ad 3f 1b	lda $1b3f	    lda row_count
.1981	3a		dec a		    dec a
.1982	8d 4c 1b	sta $1b4c	    sta end_row
.1985	4c bf 19	jmp $19bf	    jmp do_erase
.1988	c9 01		cmp #$01	+   cmp #1
.198a	d0 15		bne $19a1	    bne +
.198c	9c 49 1b	stz $1b49	    stz start_col
.198f	9c 4a 1b	stz $1b4a	    stz start_row
.1992	ad 37 1b	lda $1b37	    lda csr_col
.1995	8d 4b 1b	sta $1b4b	    sta end_col
.1998	ad 38 1b	lda $1b38	    lda csr_row
.199b	8d 4c 1b	sta $1b4c	    sta end_row
.199e	4c bf 19	jmp $19bf	    jmp do_erase
.19a1	c9 02		cmp #$02	+   cmp #2
.19a3	d0 17		bne $19bc	    bne +
.19a5					ansi_cls:
.19a5	9c 49 1b	stz $1b49	    stz start_col
.19a8	9c 4a 1b	stz $1b4a	    stz start_row
.19ab	ad 3e 1b	lda $1b3e	    lda col_count
.19ae	3a		dec a		    dec a
.19af	8d 4b 1b	sta $1b4b	    sta end_col
.19b2	ad 3f 1b	lda $1b3f	    lda row_count
.19b5	3a		dec a		    dec a
.19b6	8d 4c 1b	sta $1b4c	    sta end_row
.19b9	4c bf 19	jmp $19bf	    jmp do_erase
.19bc	4c 21 1b	jmp $1b21	+   jmp cmd_done
.19bf					do_erase:
.19bf	ae 3c 1b	ldx $1b3c	    ldx cur_char
.19c2	ac 3b 1b	ldy $1b3b	    ldy cur_color
.19c5					erase_first_line:
.19c5	9c 25 9f	stz $9f25	    stz vera_dcsel
.19c8	ad 49 1b	lda $1b49	    lda start_col
.19cb	0a		asl a		    asl
.19cc	8d 20 9f	sta $9f20	    sta vera_addr0
.19cf	ad 4a 1b	lda $1b4a	    lda work_row
.19d2	18		clc		    clc
.19d3	6d 3a 1b	adc $1b3a	    adc csr_base
.19d6	8d 21 9f	sta $9f21	    sta vera_addr1
.19d9	ad 39 1b	lda $1b39	    lda csr_bank
.19dc	8d 22 9f	sta $9f22	    sta vera_addr2
.19df	ad 4b 1b	lda $1b4b	    lda end_col     ; number of rows to clear
.19e2	38		sec		    sec
.19e3	ed 49 1b	sbc $1b49	    sbc start_col
.19e6	1a		inc a		    inc a
.19e7					erase_fill_line:
.19e7	8e 23 9f	stx $9f23	    stx vera_data0
.19ea	8c 23 9f	sty $9f23	    sty vera_data0
.19ed	3a		dec a		    dec a
.19ee	d0 f7		bne $19e7	    bne erase_fill_line
.19f0	20 1d 1b	jsr $1b1d	    jsr do_callback  ; give serial driver the chance to empty the FIFO
.19f3	9c 20 9f	stz $9f20	    stz vera_addr0
.19f6	ee 21 9f	inc $9f21	    inc vera_addr1
.19f9	ee 4a 1b	inc $1b4a	    inc work_row
.19fc	ad 4a 1b	lda $1b4a	    lda work_row
.19ff	cd 4c 1b	cmp $1b4c	    cmp end_row
.1a02	f0 07		beq $1a0b	    beq erase_last_line
.1a04	b0 0b		bcs $1a11	    bcs erase_done
.1a06	ad 3e 1b	lda $1b3e	    lda col_count ; number of columns to delete
.1a09	80 dc		bra $19e7	    bra erase_fill_line
.1a0b					erase_last_line:
.1a0b	ad 4b 1b	lda $1b4b	    lda end_col ; for Erase Line, only erase up to cursor
.1a0e	1a		inc a		    inc a
.1a0f	80 d6		bra $19e7	    bra erase_fill_line
.1a11					erase_done:
.1a11	4c 21 1b	jmp $1b21	    jmp cmd_done
.1a14					do_bell:
.1a14	a9 0a		lda #$0a	    lda #bank_audio
.1a16	85 01		sta $01		    sta bank_select_rom
.1a18	a9 00		lda #$00	    lda #$00 ; channel 0
.1a1a	a2 00		ldx #$00	    ldx #$00 ; 512 Hz
.1a1c	a0 02		ldy #$02	    ldy #$02 ;
.1a1e	18		clc		    clc
.1a1f	20 6e ff	jsr $ff6e	    jsr jsrfar  ; $FF6E
>1a22	00 c0				    .word bas_fmfreq ; $C063
>1a24	0a				    .byte bank_audio
.1a25	4c 21 1b	jmp $1b21	    jmp cmd_done
.1a28					do_bs:
.1a28	ad 37 1b	lda $1b37	    lda csr_col
.1a2b	f0 07		beq $1a34	    beq +
.1a2d	3a		dec a		    dec A
.1a2e	8d 37 1b	sta $1b37	    sta csr_col
.1a31	20 65 17	jsr $1765	    jsr load_addr_vector
.1a34	4c 21 1b	jmp $1b21	+   jmp cmd_done
.1a37					do_tab:
.1a37	ae 37 1b	ldx $1b37	    ldx csr_col
.1a3a	ca		dex		    dex
.1a3b	e8		inx		-   inx
.1a3c	bd 52 1b	lda $1b52,x	    lda tab_stops,X
.1a3f	10 fa		bpl $1a3b	    bpl -
.1a41	8e 37 1b	stx $1b37	    stx csr_col
.1a44	20 65 17	jsr $1765	    jsr load_addr_vector
.1a47	4c 21 1b	jmp $1b21	    jmp cmd_done
.1a4a					do_SGR:
.1a4a	a2 02		ldx #$02	    ldx #2
.1a4c					sgr_loop:
.1a4c	bd 42 1b	lda $1b42,x	    lda parameters, x
.1a4f	d0 0b		bne $1a5c	    bne +         ;0: reset all modes, styles, and colors
.1a51	9c 3d 1b	stz $1b3d	    stz cur_mode
.1a54	a9 07		lda #$07	    lda #default_color_fg
.1a56	8d 3b 1b	sta $1b3b	    sta cur_color
.1a59	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1a5c	c9 1e		cmp #$1e	+   cmp #30
.1a5e	b0 1e		bcs $1a7e	    bcs sgr_30
.1a60	c9 01		cmp #$01	    cmp #1  ; bold
.1a62	d0 0b		bne $1a6f	    bne +
.1a64	ad 3b 1b	lda $1b3b	    lda cur_color
.1a67	09 08		ora #$08	    ora #$08
.1a69	8d 3b 1b	sta $1b3b	    sta cur_color
.1a6c	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1a6f	c9 16		cmp #$16	+   cmp #22
.1a71	d0 0b		bne $1a7e	    bne +
.1a73	ad 3b 1b	lda $1b3b	    lda cur_color
.1a76	29 f7		and #$f7	    and #$F7 ; remove bright bit
.1a78	8d 3b 1b	sta $1b3b	    sta cur_color
.1a7b	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1a7e					+
.1a7e					sgr_30:
.1a7e	c9 26		cmp #$26	    cmp #38
.1a80	b0 14		bcs $1a96	    bcs +
.1a82	38		sec		    sec
.1a83	e9 1e		sbc #$1e	    sbc #30
.1a85	8d 44 1b	sta $1b44	    sta param_1
.1a88	ad 3b 1b	lda $1b3b	    lda cur_color
.1a8b	29 f0		and #$f0	    and #$F0
.1a8d	0d 44 1b	ora $1b44	    ora param_1
.1a90	8d 3b 1b	sta $1b3b	    sta cur_color
.1a93	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1a96	c9 27		cmp #$27	+   cmp #39
.1a98	d0 0d		bne $1aa7	    bne +
.1a9a	ad 3b 1b	lda $1b3b	    lda cur_color
.1a9d	29 f0		and #$f0	    and #$F0
.1a9f	09 07		ora #$07	    ora #default_color_fg
.1aa1	8d 3b 1b	sta $1b3b	    sta cur_color
.1aa4	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1aa7					+
.1aa7					sgr_40:
.1aa7	c9 30		cmp #$30	    cmp #48
.1aa9	b0 18		bcs $1ac3	    bcs +
.1aab	38		sec		    sec
.1aac	e9 28		sbc #$28	    sbc #40
.1aae	0a		asl a		    asl
.1aaf	0a		asl a		    asl
.1ab0	0a		asl a		    asl
.1ab1	0a		asl a		    asl
.1ab2	8d 44 1b	sta $1b44	    sta param_1
.1ab5	ad 3b 1b	lda $1b3b	    lda cur_color
.1ab8	29 0f		and #$0f	    and #$0F
.1aba	0d 44 1b	ora $1b44	    ora param_1
.1abd	8d 3b 1b	sta $1b3b	    sta cur_color
.1ac0	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1ac3	c9 31		cmp #$31	+   cmp #49
.1ac5	d0 0d		bne $1ad4	    bne +
.1ac7	ad 3b 1b	lda $1b3b	    lda cur_color
.1aca	29 0f		and #$0f	    and #$0F
.1acc	09 00		ora #$00	    ora #default_color_bg
.1ace	8d 3b 1b	sta $1b3b	    sta cur_color
.1ad1	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1ad4					+
.1ad4	c9 5a		cmp #$5a	    cmp #90
.1ad6	90 18		bcc $1af0	    bcc +
.1ad8	c9 62		cmp #$62	    cmp #98
.1ada	b0 14		bcs $1af0	    bcs +
.1adc	38		sec		    sec
.1add	e9 52		sbc #$52	    sbc #82
.1adf	8d 44 1b	sta $1b44	    sta param_1
.1ae2	ad 3b 1b	lda $1b3b	    lda cur_color
.1ae5	29 f0		and #$f0	    and #$F0
.1ae7	0d 44 1b	ora $1b44	    ora param_1
.1aea	8d 3b 1b	sta $1b3b	    sta cur_color
.1aed	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1af0					+
.1af0					sgr_100:
.1af0	c9 6c		cmp #$6c	    cmp #108
.1af2	b0 18		bcs $1b0c	    bcs +
.1af4	38		sec		    sec
.1af5	e9 5c		sbc #$5c	    sbc #92
.1af7	0a		asl a		    asl
.1af8	0a		asl a		    asl
.1af9	0a		asl a		    asl
.1afa	0a		asl a		    asl
.1afb	8d 44 1b	sta $1b44	    sta param_1
.1afe	ad 3b 1b	lda $1b3b	    lda cur_color
.1b01	29 f0		and #$f0	    and #$F0
.1b03	0d 44 1b	ora $1b44	    ora param_1
.1b06	8d 3b 1b	sta $1b3b	    sta cur_color
.1b09	4c 0c 1b	jmp $1b0c	    jmp sgr_next
.1b0c					+
.1b0c					sgr_next:
.1b0c	e8		inx		    inx
.1b0d	ec 42 1b	cpx $1b42	    cpx param_index
.1b10	b0 03		bcs $1b15	    bcs +
.1b12	4c 4c 1a	jmp $1a4c	    jmp sgr_loop
.1b15	d0 03		bne $1b1a	+   bne +
.1b17	4c 4c 1a	jmp $1a4c	    jmp sgr_loop
.1b1a	4c 21 1b	jmp $1b21	+   jmp cmd_done
.1b1d					do_callback:
.1b1d	6c f4 1b	jmp ($1bf4)	    jmp (callback_addr)
.1b20					empty_callback:
.1b20	60		rts		    RTS
.1b21					cmd_done:
.1b21	9c 42 1b	stz $1b42	    stz param_index
.1b24	9c 43 1b	stz $1b43	    stz param_0
.1b27	9c 44 1b	stz $1b44	    stz param_1
.1b2a	9c 45 1b	stz $1b45	    stz param_2
.1b2d	4c ca 17	jmp $17ca	    jmp check_bounds
.1b30					csr_blink_off:
.1b30	60		rts		    rts
.1b31					csr_blink_on:
.1b31	60		rts		    rts
.1b32					csr_blink:
.1b32	60		rts		    rts
.1b33					csr_blink_reset:
.1b33	60		rts		    rts
.1b34					csr_blink_wait:
.1b34	60		rts		    rts
.1b35					csr_hide:
.1b35	60		rts		    rts
.1b36					csr_show:
.1b36	60		rts		    rts
>1b37	00				csr_col:       .byte $00  ; column number (addr bits 0-7)
>1b38	00				csr_row:       .byte $00  ; row number (addr bits 8-15)
>1b39	11				csr_bank:      .byte $11 ; auto-increment and addr bit 16.
>1b3a	b0				csr_base:      .byte $b0  ; base address of screen buffer
>1b3b	01				cur_color:     .byte $01 ; currrent color attribute
>1b3c	20				cur_char:      .byte ' ' ; fill character for clear screen
>1b3d	00				cur_mode:      .byte $00 ; Modes bitmask (not implemented)
>1b3e	50				col_count:     .byte 80 ; default screen width
>1b3f	3c				row_count:     .byte 60 ; default screen height
>1b40	00				bank_rom_save: .byte 0 ; perserve the current ROM bank
>1b41	00				bank_ram_save: .byte 0 ; preserve the current RAM bank
=5					param_count = 5
.1b42					parameters:
>1b42	00				param_index:   .byte 0     ; >0 if parsing a terminal sequence
>1b43	00				param_0:       .byte 0     ; .X=1 [ or pain non-CSI command
>1b44	00				param_1:       .byte 0     ; .X=2 first parameter in CSI
>1b45	00				param_2:       .byte 0     ; .X=3 second parameter in CSI
>1b46	00				param_3:       .byte 0     ; .X=4 second parameter in CSI
>1b47	00				param_4:       .byte 0     ; .X=5 second parameter in CSI
>1b48	00				digit_1:       .byte 0     ; character being processed
.1b49					incr_col:
.1b49					start_col:
>1b49	00				work_col:      .byte 0  ; current col for erase/scroll (0-79)
.1b4a					start_row:
>1b4a	00				work_row:      .byte 0  ; current row for erase/scroll (0-59)
>1b4b	00				end_col:       .byte 0  ; end col for erase/scroll (0-79)
>1b4c	00				end_row:       .byte 0  ; end row for erase/scroll (0-59)
>1b4d	00				mult_1:        .byte 0   ; temp slot for multiplication
>1b4e	00				mult_2:        .byte 0   ; temp slot for multiplication
>1b4f	00 00				cbs_next:      .word 0     ; the next time the cursor should blink
>1b51	00				cbs_blink:     .byte 0     ; Bitmask
>1b52	00 00 00 00 00 00 00 00		tab_stops:  .byte 0,0,0,0,0,0,0,0,0,$80
>1b5a	00 80
>1b5c	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b64	00 80
>1b66	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b6e	00 80
>1b70	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b78	00 80
>1b7a	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b82	00 80
>1b84	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b8c	00 80
>1b8e	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1b96	00 80
>1b98	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1ba0	00 80
>1ba2	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1baa	00 80
>1bac	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1bb4	00 80
>1bb6	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1bbe	00 80
>1bc0	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1bc8	00 80
>1bca	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,  $FF,$FF
>1bd2	ff ff
.1bd4					palette_data:
.1bd4					palette_normal:
>1bd4	00 00				              .byte $00, $00  ; black
>1bd6	00 0c				              .byte $00, $0C  ; red
>1bd8	c0 00				              .byte $C0, $00  ; green
>1bda	c0 0c				              .byte $C0, $0C  ; yellow
>1bdc	0c 00				              .byte $0C, $00  ; blue
>1bde	0c 0c				              .byte $0C, $0C  ; magenta
>1be0	cc 00				              .byte $CC, $00  ; cyan
>1be2	cc 0c				              .byte $CC, $0C  ; white
.1be4					pallete_bright:
>1be4	66 06				              .byte $66, $06  ; dark gray (light black)
>1be6	00 0f				              .byte $00, $0f  ; light red
>1be8	f0 00				              .byte $f0, $00  ; light green
>1bea	f0 0f				              .byte $f0, $0f  ; bright yellow
>1bec	0f 00				              .byte $0f, $00  ; light blue
>1bee	0f 0f				              .byte $0f, $0f  ; light magenta
>1bf0	ff 00				              .byte $ff, $00  ; light cyan
>1bf2	ff 0f				              .byte $ff, $0f  ; bright white
.1bf4					palette_end:
.1bf4					callback_addr:
>1bf4	20 1b				            .word empty_callback

;******  Return to file: ANSI.ASM


;******  End of listing
