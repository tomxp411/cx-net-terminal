
; 64tass Turbo Assembler Macro V1.59.3120 listing file
; 64tass -o ANSI.PRG --list ANSI.LST --cbm-prg ANSI.ASM
; Wed May 01 21:04:16 2024

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: ANSI.ASM


;******  Processing file: KERNAL.ASM

=$ffe4					getin = $ffe4
=$ff62					screen_set_charset = $ff62
=$ff47					enter_basic = $ff47

;******  Return to file: ANSI.ASM

>0801	0b 08 0a 00 ce 90 3a 9e		.byte $0B,$08,$0A,$00,$CE,$90,$3A,$9E,$24,$38,$31,$30,$00,$00,$00
>0809	24 38 31 30 00 00 00
.0810					main:
.0810	20 8e 17	jsr $178e	    jsr ansi_init
.0813					test_start:
.0813	a9 77		lda #$77	    lda #<str_test
.0815	85 02		sta $02		    sta R0
.0817	a9 0a		lda #$0a	    lda #>str_test
.0819	85 03		sta $03		    sta R0+1
.081b					print_loop:
.081b	b2 02		lda ($02)	    lda (R0)
.081d	c9 01		cmp #$01	    cmp #$01
.081f	d0 03		bne $0824	    bne +
.0821	20 37 08	jsr $0837	    jsr draw_test
.0824	c9 1a		cmp #$1a	+   cmp #26 ; end of file marker
.0826	f0 2d		beq $0855	    beq done
.0828					print_test:
.0828	20 43 18	jsr $1843	    jsr ansi_print_str
.082b	20 31 08	jsr $0831	    jsr wait_for_key
.082e	4c 1b 08	jmp $081b	    jmp print_loop
.0831					wait_for_key:
.0831	20 e4 ff	jsr $ffe4	-   jsr getin
.0834	f0 fb		beq $0831	    beq -
.0836	60		rts		    rts
.0837					draw_test:
.0837	a5 02		lda $02		    lda R0L
.0839	48		pha		    pha
.083a	a5 03		lda $03		    lda R0H
.083c	48		pha		    pha
.083d	a9 6d		lda #$6d	    lda #<test_grid
.083f	85 02		sta $02		    sta R0L
.0841	a9 08		lda #$08	    lda #>test_grid
.0843	85 03		sta $03		    sta R0H
.0845	20 43 18	jsr $1843	    jsr ansi_print_str
.0848	68		pla		    pla
.0849	85 03		sta $03		    sta R0H
.084b	68		pla		    pla
.084c	85 02		sta $02		    sta R0L
.084e	e6 02		inc $02		    inc R0L
.0850	d0 02		bne $0854	    bne +
.0852	e6 03		inc $03		    inc R0H
.0854	60		rts		+   rts
.0855					done:
.0855	4c 13 08	jmp $0813	    jmp test_start
.0858	00		brk #		    brk
>0859	00 00 00 00			.byte 0,0,0,0
.085d					press_key_text:
>085d	5b 50 72 65 73 73 20 41		    .text "[Press Any Key]",0
>0865	6e 79 20 4b 65 79 5d 00
.086d					test_grid:
>086d	1b 5b 32 4a 1b 5b 32 48		    .text 27,"[2J",27,"[2H",27,"[36m"
>0875	1b 5b 33 36 6d
>087a	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>0882	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>0892	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>08a2	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>08b2	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>08c2	2e 2e 2c 2e 2e 2e 2e 38
>08ca	1b 5b 31 39 48			    .text 27,"[19H"
>08cf	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>08d7	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>08e7	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>08f7	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>0907	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>0917	2e 2e 2c 2e 2e 2e 2e 38
>091f	1b 5b 32 31 48			    .text 27,"[21H"
>0924	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>092c	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>093c	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>094c	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>095c	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>096c	2e 2e 2c 2e 2e 2e 2e 38
>0974	1b 5b 36 30 3b 37 30 48		    .text 27,"[60;70H"
>097c	37 2e 2e 2e 2e 2c 2e 2e		    .text "7....,....8"
>0984	2e 2e 38
>0987	1b 5b 48			    .text 27,"[H"
>098a	31 0d 0a 32 0d 0a 33 0d		    .text "1", $0d,$0a,"2", $0d,$0a,"3", $0d,$0a,"4", $0d,$0a,"5", $0d,$0a
>0992	0a 34 0d 0a 35 0d 0a
>0999	36 0d 0a 37 0d 0a 38 0d		    .text "6", $0d,$0a,"7", $0d,$0a,"8", $0d,$0a,"9", $0d,$0a,"10",$0d,$0a
>09a1	0a 39 0d 0a 31 30 0d 0a
>09a9	31 31 0d 0a 31 32 0d 0a		    .text "11",$0d,$0a,"12",$0d,$0a,"13",$0d,$0a,"14",$0d,$0a,"15",$0d,$0a
>09b1	31 33 0d 0a 31 34 0d 0a 31 35 0d 0a
>09bd	31 36 0d 0a 31 37 0d 0a		    .text "16",$0d,$0a,"17",$0d,$0a,"18",$0d,$0a,"19",$0d,$0a,"20",$0d,$0a
>09c5	31 38 0d 0a 31 39 0d 0a 32 30 0d 0a
>09d1	32 31 0d 0a 32 32 0d 0a		    .text "21",$0d,$0a,"22",$0d,$0a,"23",$0d,$0a,"24",$0d,$0a,"25",$0d,$0a
>09d9	32 33 0d 0a 32 34 0d 0a 32 35 0d 0a
>09e5	32 36 0d 0a 32 37 0d 0a		    .text "26",$0d,$0a,"27",$0d,$0a,"28",$0d,$0a,"29",$0d,$0a,"30",$0d,$0a
>09ed	32 38 0d 0a 32 39 0d 0a 33 30 0d 0a
>09f9	33 31 0d 0a 33 32 0d 0a		    .text "31",$0d,$0a,"32",$0d,$0a,"33",$0d,$0a,"34",$0d,$0a,"35",$0d,$0a
>0a01	33 33 0d 0a 33 34 0d 0a 33 35 0d 0a
>0a0d	33 36 0d 0a 33 37 0d 0a		    .text "36",$0d,$0a,"37",$0d,$0a,"38",$0d,$0a,"39",$0d,$0a,"40",$0d,$0a
>0a15	33 38 0d 0a 33 39 0d 0a 34 30 0d 0a
>0a21	34 31 0d 0a 34 32 0d 0a		    .text "41",$0d,$0a,"42",$0d,$0a,"43",$0d,$0a,"44",$0d,$0a,"45",$0d,$0a
>0a29	34 33 0d 0a 34 34 0d 0a 34 35 0d 0a
>0a35	34 36 0d 0a 34 37 0d 0a		    .text "46",$0d,$0a,"47",$0d,$0a,"48",$0d,$0a,"49",$0d,$0a,"50",$0d,$0a
>0a3d	34 38 0d 0a 34 39 0d 0a 35 30 0d 0a
>0a49	35 31 0d 0a 35 32 0d 0a		    .text "51",$0d,$0a,"52",$0d,$0a,"53",$0d,$0a,"54",$0d,$0a,"55",$0d,$0a
>0a51	35 33 0d 0a 35 34 0d 0a 35 35 0d 0a
>0a5d	35 36 0d 0a 35 37 0d 0a		    .text "56",$0d,$0a,"57",$0d,$0a,"58",$0d,$0a,"59",$0d,$0a,"60"
>0a65	35 38 0d 0a 35 39 0d 0a 36 30
>0a6f	1b 5b 48 1b 5b 30 6d		    .text 27,"[H",27,"[0m"
>0a76	00				    .byte 0
.0a77					str_test:
>0a77	1b 5b 32 4a 1b 5b 48		    .text 27,"[2J",27,"[H"
>0a7e	1b 5b 32 3b 34 48		    .text 27,"[2;4H"
>0a84	41 4e 53 49 20 43 6f 6e		    .text "ANSI Control and Escape Code Demo",$0d,$0a,$0a,$0a
>0a8c	74 72 6f 6c 20 61 6e 64 20 45 73 63 61 70 65 20
>0a9c	43 6f 64 65 20 44 65 6d 6f 0d 0a 0a 0a
>0aa9	54 68 69 73 20 77 69 6c		    .text "This will run several test sequences.",$0d,$0a
>0ab1	6c 20 72 75 6e 20 73 65 76 65 72 61 6c 20 74 65
>0ac1	73 74 20 73 65 71 75 65 6e 63 65 73 2e 0d 0a
>0ad0	41 66 74 65 72 20 65 61		    .text "After each sequence, the test will pause.",$0d,$0a
>0ad8	63 68 20 73 65 71 75 65 6e 63 65 2c 20 74 68 65
>0ae8	20 74 65 73 74 20 77 69 6c 6c 20 70 61 75 73 65
>0af8	2e 0d 0a
>0afb	54 65 78 74 20 6f 6e 20		    .text "Text on the screen should tell you how",$0d,$0a
>0b03	74 68 65 20 73 63 72 65 65 6e 20 73 68 6f 75 6c
>0b13	64 20 74 65 6c 6c 20 79 6f 75 20 68 6f 77 0d 0a
>0b23	74 6f 20 69 6e 74 65 72		    .text "to interpret each test.",$0d,$0a,$0a
>0b2b	70 72 65 74 20 65 61 63 68 20 74 65 73 74 2e 0d
>0b3b	0a 0a
>0b3d	46 6f 72 20 65 78 61 6d		    .text "For example:",$0d,$0a
>0b45	70 6c 65 3a 0d 0a
>0b4b	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2",$0d,$0a
>0b53	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 0d 0a
>0b61	20 20 20 20 78 20 5b 78		    .text "    x [x is on column 5]",$0d,$0a
>0b69	20 69 73 20 6f 6e 20 63 6f 6c 75 6d 6e 20 35 5d
>0b79	0d 0a
>0b7b	0d 0a				    .text $0d,$0a
>0b7d	49 66 20 74 68 65 20 78		    .text "If the x is on column 5, then the test passes.",$0d,$0a
>0b85	20 69 73 20 6f 6e 20 63 6f 6c 75 6d 6e 20 35 2c
>0b95	20 74 68 65 6e 20 74 68 65 20 74 65 73 74 20 70
>0ba5	61 73 73 65 73 2e 0d 0a
>0bad	0a 0a				    .byte 10,$0a
>0baf	41 66 74 65 72 20 63 6f		    .text "After confirming each test, press a key",$0d,$0a
>0bb7	6e 66 69 72 6d 69 6e 67 20 65 61 63 68 20 74 65
>0bc7	73 74 2c 20 70 72 65 73 73 20 61 20 6b 65 79 0d
>0bd7	0a
>0bd8	66 6f 72 20 74 68 65 20		    .text "for the next test.",$0d,$0a
>0be0	6e 65 78 74 20 74 65 73 74 2e 0d 0a
>0bec	0a 0a				    .text $0a,$0a
>0bee	5b 50 72 65 73 73 20 61		    .text "[Press a key]"
>0bf6	20 6b 65 79 5d
>0bfb	00				    .byte 0
>0bfc	01				    .text 1
>0bfd	1b 5b 35 3b 35 48 53 63		    .text 27,"[5;5HScroll Test: "
>0c05	72 6f 6c 6c 20 54 65 73 74 3a 20
>0c10	54 68 65 20 73 63 72 65		    .text "The screen will scroll up by 1 line."
>0c18	65 6e 20 77 69 6c 6c 20 73 63 72 6f 6c 6c 20 75
>0c28	70 20 62 79 20 31 20 6c 69 6e 65 2e
>0c34	1b 5b 36 30 3b 31 30 48		    .text 27,"[60;10H[Bottom of the screen]"
>0c3c	5b 42 6f 74 74 6f 6d 20 6f 66 20 74 68 65 20 73
>0c4c	63 72 65 65 6e 5d
>0c52	00				    .byte 0
>0c53	0d 0a 09 5b 61 66 74 65		    .text 13,10,9,"[after the line feed, the new bottom]"
>0c5b	72 20 74 68 65 20 6c 69 6e 65 20 66 65 65 64 2c
>0c6b	20 74 68 65 20 6e 65 77 20 62 6f 74 74 6f 6d 5d
>0c7b	00				    .byte 0
>0c7c	1b 5b 32 4a 1b 5b 48		    .text 27,"[2J",27,"[H"
>0c83	1b 5b 32 3b 36 35 48 4e		    .text 27,"[2;65HNo-wrap test. -[Not visible]>"
>0c8b	6f 2d 77 72 61 70 20 74 65 73 74 2e 20 2d 5b 4e
>0c9b	6f 74 20 76 69 73 69 62 6c 65 5d 3e
>0ca7	1b 5b 33 48 4e 6f 2d 57		    .text 27,"[3HNo-Wrap test: > char should be on",$0d,$0A
>0caf	72 61 70 20 74 65 73 74 3a 20 3e 20 63 68 61 72
>0cbf	20 73 68 6f 75 6c 64 20 62 65 20 6f 6e 0d 0a
>0cce	72 69 67 68 74 20 65 64		    .text "right edge and [Not visible] should not",$0d,$0a
>0cd6	67 65 20 61 6e 64 20 5b 4e 6f 74 20 76 69 73 69
>0ce6	62 6c 65 5d 20 73 68 6f 75 6c 64 20 6e 6f 74 0d
>0cf6	0a
>0cf7	62 65 20 76 69 73 69 62		    .text "be visible.",$0d,$0a
>0cff	6c 65 2e 0d 0a
>0d04	00				    .byte 0
>0d05	1b 5b 32 4a			    .text 27,"[2J"
>0d09	1b 5b 48			    .text 27,"[H"
>0d0c	1b 42 61 64 20 65 73 63		    .text 27,"Bad escape code tests:",$0d,$0a
>0d14	61 70 65 20 63 6f 64 65 20 74 65 73 74 73 3a 0d
>0d24	0a
>0d25	1b 48 20 28 6d 69 73 73		    .text 27,"H (missing [)",$0d,$0a
>0d2d	69 6e 67 20 5b 29 0d 0a
>0d35	1b 5b 5a 20 28 5a 20 69		    .text 27,"[Z (Z is not a valid command)",$0d,$0a
>0d3d	73 20 6e 6f 74 20 61 20 76 61 6c 69 64 20 63 6f
>0d4d	6d 6d 61 6e 64 29 0d 0a
>0d55	00				    .byte 0
>0d56	1b 5b 32 4a 1b 5b 31 3b		    .text 27,"[2J",27,"[1;5H"
>0d5e	35 48
>0d60	1b 5b 39 37 6d 43 6f 6c		    .text 27,"[97mColor Test",13,10,10
>0d68	6f 72 20 54 65 73 74 0d 0a 0a
>0d72	1b 5b 30 6d			    .text 27,"[0m"
>0d76	1b 5b 33 37 6d 33 37 20		    .text 27,"[37m37 WHITE    ",27,"[1m1 BOLD  ",13,10
>0d7e	57 48 49 54 45 20 20 20 20 1b 5b 31 6d 31 20 42
>0d8e	4f 4c 44 20 20 0d 0a
>0d95	1b 5b 33 36 6d 33 36 20		    .text 27,"[36m36 CYAN     ",27,"[1m1 BOLD  ",13,10
>0d9d	43 59 41 4e 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0dad	4f 4c 44 20 20 0d 0a
>0db4	1b 5b 33 35 6d 33 35 20		    .text 27,"[35m35 MAGENTA  ",27,"[1m1 BOLD  ",13,10
>0dbc	4d 41 47 45 4e 54 41 20 20 1b 5b 31 6d 31 20 42
>0dcc	4f 4c 44 20 20 0d 0a
>0dd3	1b 5b 33 34 6d 33 34 20		    .text 27,"[34m34 BLUE     ",27,"[1m1 BOLD  ",13,10
>0ddb	42 4c 55 45 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0deb	4f 4c 44 20 20 0d 0a
>0df2	1b 5b 33 33 6d 33 33 20		    .text 27,"[33m33 YELLOW   ",27,"[1m1 BOLD  ",13,10
>0dfa	59 45 4c 4c 4f 57 20 20 20 1b 5b 31 6d 31 20 42
>0e0a	4f 4c 44 20 20 0d 0a
>0e11	1b 5b 33 32 6d 33 32 20		    .text 27,"[32m32 GREEN    ",27,"[1m1 BOLD  ",13,10
>0e19	47 52 45 45 4e 20 20 20 20 1b 5b 31 6d 31 20 42
>0e29	4f 4c 44 20 20 0d 0a
>0e30	1b 5b 33 31 6d 33 31 20		    .text 27,"[31m31 RED      ",27,"[1m1 BOLD  ",13,10
>0e38	52 45 44 20 20 20 20 20 20 1b 5b 31 6d 31 20 42
>0e48	4f 4c 44 20 20 0d 0a
>0e4f	1b 5b 34 34 6d			    .text 27,"[44m"
>0e54	1b 5b 33 30 6d 33 30 20		    .text 27,"[30m30 BLACK    ",27,"[1m1 BOLD  ",13,10
>0e5c	42 4c 41 43 4b 20 20 20 20 1b 5b 31 6d 31 20 42
>0e6c	4f 4c 44 20 20 0d 0a
>0e73	1b 5b 34 39 6d			    .text 27,"[49m"
>0e78	0a 0a				    .text $0a,$0a
>0e7a	1b 5b 33 39 6d 33 39 20		    .text 27,"[39m39 DEFAULT (white on black)",13,10
>0e82	44 45 46 41 55 4c 54 20 28 77 68 69 74 65 20 6f
>0e92	6e 20 62 6c 61 63 6b 29 0d 0a
>0e9c	0a 0a				    .text $0a,$0a
>0e9e	1b 5b 39 37 6d 39 37 20		    .text 27,"[97m97 BRT WHITE",13,10
>0ea6	42 52 54 20 57 48 49 54 45 0d 0a
>0eb1	1b 5b 39 36 6d 39 36 20		    .text 27,"[96m96 BRT CYAN",13,10
>0eb9	42 52 54 20 43 59 41 4e 0d 0a
>0ec3	1b 5b 39 35 6d 39 35 20		    .text 27,"[95m95 BRT MAGENTA",13,10
>0ecb	42 52 54 20 4d 41 47 45 4e 54 41 0d 0a
>0ed8	1b 5b 39 34 6d 39 34 20		    .text 27,"[94m94 BRT BLUE",13,10
>0ee0	42 52 54 20 42 4c 55 45 0d 0a
>0eea	1b 5b 39 33 6d 39 33 20		    .text 27,"[93m93 BRT YELLOW",13,10
>0ef2	42 52 54 20 59 45 4c 4c 4f 57 0d 0a
>0efe	1b 5b 39 32 6d 39 32 20		    .text 27,"[92m92 BRT GREEN",13,10
>0f06	42 52 54 20 47 52 45 45 4e 0d 0a
>0f11	1b 5b 39 31 6d 39 31 20		    .text 27,"[91m91 BRT RED",13,10
>0f19	42 52 54 20 52 45 44 0d 0a
>0f22	1b 5b 39 30 6d 39 30 20		    .text 27,"[90m90 BRT BLACK",13,10
>0f2a	42 52 54 20 42 4c 41 43 4b 0d 0a
>0f35	0a 0a				    .text $0a,$0a
>0f37	1b 5b 33 30 3b 34 37 6d		    .text 27,"[30;47m47 BG WHITE   ",27,"[49m",13,10
>0f3f	34 37 20 42 47 20 57 48 49 54 45 20 20 20 1b 5b
>0f4f	34 39 6d 0d 0a
>0f54	1b 5b 33 30 3b 34 36 6d		    .text 27,"[30;46m46 BG CYAN    ",27,"[49m",13,10
>0f5c	34 36 20 42 47 20 43 59 41 4e 20 20 20 20 1b 5b
>0f6c	34 39 6d 0d 0a
>0f71	1b 5b 33 30 3b 34 35 6d		    .text 27,"[30;45m45 BG MAGENTA ",27,"[49m",13,10
>0f79	34 35 20 42 47 20 4d 41 47 45 4e 54 41 20 1b 5b
>0f89	34 39 6d 0d 0a
>0f8e	1b 5b 33 30 3b 34 34 6d		    .text 27,"[30;44m44 BG BLUE    ",27,"[49m",13,10
>0f96	34 34 20 42 47 20 42 4c 55 45 20 20 20 20 1b 5b
>0fa6	34 39 6d 0d 0a
>0fab	1b 5b 33 30 3b 34 33 6d		    .text 27,"[30;43m43 BG YELLOW  ",27,"[49m",13,10
>0fb3	34 33 20 42 47 20 59 45 4c 4c 4f 57 20 20 1b 5b
>0fc3	34 39 6d 0d 0a
>0fc8	1b 5b 33 30 3b 34 32 6d		    .text 27,"[30;42m42 BG GREEN   ",27,"[49m",13,10
>0fd0	34 32 20 42 47 20 47 52 45 45 4e 20 20 20 1b 5b
>0fe0	34 39 6d 0d 0a
>0fe5	1b 5b 33 30 3b 34 31 6d		    .text 27,"[30;41m41 BG RED     ",27,"[49m",13,10
>0fed	34 31 20 42 47 20 52 45 44 20 20 20 20 20 1b 5b
>0ffd	34 39 6d 0d 0a
>1002	1b 5b 39 30 3b 34 30 6d		    .text 27,"[90;40m40 BG BLACK   ",27,"[49m",13,10
>100a	34 30 20 42 47 20 42 4c 41 43 4b 20 20 20 1b 5b
>101a	34 39 6d 0d 0a
>101f	0a 0a				    .text $0a,$0a
>1021	1b 5b 33 39 6d 33 39 20		    .text 27,"[39m39 DEFAULT (white on black)",13,10
>1029	44 45 46 41 55 4c 54 20 28 77 68 69 74 65 20 6f
>1039	6e 20 62 6c 61 63 6b 29 0d 0a
>1043	0a 0a				    .text $0a,$0a
>1045	1b 5b 33 37 6d 5b 1b 5b		    .text 27,"[37m[",27,"[93mA",27,"[37m]",27,"[32m Menu Item Test",13,10
>104d	39 33 6d 41 1b 5b 33 37 6d 5d 1b 5b 33 32 6d 20
>105d	4d 65 6e 75 20 49 74 65 6d 20 54 65 73 74 0d 0a
>106d	1b 5b 30 6d 30 20 52 45		    .text 27,"[0m0 RESET",13,10
>1075	53 45 54 0d 0a
>107a	00				    .byte 0
>107b	1b 5b 39 37 6d			    .text 27,"[97m"
>1080	1b 5b 32 4a 1b 5b 48 43		    .text 27,"[2J",27,"[HCursor movement test",13,10,10,10
>1088	75 72 73 6f 72 20 6d 6f 76 65 6d 65 6e 74 20 74
>1098	65 73 74 0d 0a 0a 0a
>109f	1b 5b 33 31 6d			    .text 27,"[31m"
>10a4	1b 5b 35 48 43 55 55 20		    .text 27,"[5HCUU >",27,"[A< Up one line",13,10,10,10
>10ac	3e 1b 5b 41 3c 20 55 70 20 6f 6e 65 20 6c 69 6e
>10bc	65 0d 0a 0a 0a
>10c1	1b 5b 35 3b 33 30 48 43		    .text 27,"[5;30HCUU 1 >",27,"[1A< Up 1 line",13,10,10,10
>10c9	55 55 20 31 20 3e 1b 5b 31 41 3c 20 55 70 20 31
>10d9	20 6c 69 6e 65 0d 0a 0a 0a
>10e2	1b 5b 35 3b 36 30 48 43		    .text 27,"[5;60HCUU 2 >",27,"[2A< Up 2 lines",13,10
>10ea	55 55 20 32 20 3e 1b 5b 32 41 3c 20 55 70 20 32
>10fa	20 6c 69 6e 65 73 0d 0a
>1102	1b 5b 33 32 6d			    .text 27,"[32m"
>1107	1b 5b 31 30 48 43 55 44		    .text 27,"[10HCUD >",27,"[B< Down one line",13,10,10
>110f	20 3e 1b 5b 42 3c 20 44 6f 77 6e 20 6f 6e 65 20
>111f	6c 69 6e 65 0d 0a 0a
>1126	1b 5b 31 30 3b 33 30 48		    .text 27,"[10;30HCUD 1 >",27,"[B< Down one line",13,10,10
>112e	43 55 44 20 31 20 3e 1b 5b 42 3c 20 44 6f 77 6e
>113e	20 6f 6e 65 20 6c 69 6e 65 0d 0a 0a
>114a	1b 5b 31 30 3b 36 30 48		    .text 27,"[10;60HCUD 2 >",27,"[2B< Down 2 lines",13,10,10
>1152	43 55 44 20 32 20 3e 1b 5b 32 42 3c 20 44 6f 77
>1162	6e 20 32 20 6c 69 6e 65 73 0d 0a 0a
>116e	1b 5b 33 33 6d			    .text 27,"[33m"
>1173	1b 5b 31 35 48 43 55 46		    .text 27,"[15HCUF >",27,"[C< One space gap",13,10,10
>117b	20 3e 1b 5b 43 3c 20 4f 6e 65 20 73 70 61 63 65
>118b	20 67 61 70 0d 0a 0a
>1192	43 55 46 20 31 20 3e 1b		    .text "CUF 1 >",27,"[C< One space gap",13,10,10
>119a	5b 43 3c 20 4f 6e 65 20 73 70 61 63 65 20 67 61
>11aa	70 0d 0a 0a
>11ae	43 55 46 20 32 20 3e 1b		    .text "CUF 2 >",27,"[2C< 2 space gap",13,10,10
>11b6	5b 32 43 3c 20 32 20 73 70 61 63 65 20 67 61 70
>11c6	0d 0a 0a
>11c9	1b 5b 33 36 6d			    .text 27,"[36m"
>11ce	43 55 42 20 3e 58 1b 5b		    .text "CUB >X",27,"[D< Should be no gap and no X",13,10,10
>11d6	44 3c 20 53 68 6f 75 6c 64 20 62 65 20 6e 6f 20
>11e6	67 61 70 20 61 6e 64 20 6e 6f 20 58 0d 0a 0a
>11f5	43 55 42 20 31 20 3e 58		    .text "CUB 1 >X",27,"[1D< Should be no gap and no X",13,10,10
>11fd	1b 5b 31 44 3c 20 53 68 6f 75 6c 64 20 62 65 20
>120d	6e 6f 20 67 61 70 20 61 6e 64 20 6e 6f 20 58 0d
>121d	0a 0a
>121f	43 55 42 20 32 20 3e 58		    .text "CUB 2 >XX",27,"[2D< Should be no gap and no X",13,10,10
>1227	58 1b 5b 32 44 3c 20 53 68 6f 75 6c 64 20 62 65
>1237	20 6e 6f 20 67 61 70 20 61 6e 64 20 6e 6f 20 58
>1247	0d 0a 0a
>124a	0a 0a				    .byte $0a,$0a
>124c	00				    .byte 0
>124d	01				    .byte 1
>124e	1b 5b 32 4a			    .text 27,"[2J"
>1252	1b 5b 48			    .text 27,"[H"
>1255	1b 5b 30 6d			    .text 27,"[0m"
>1259	43 6f 6e 74 72 6f 6c 20		    .text "Control character test",$0d,$0a,$0a
>1261	63 68 61 72 61 63 74 65 72 20 74 65 73 74 0d 0a
>1271	0a
>1272	24 30 37 20 42 45 4c 4c		    .text "$07 BELL: Play a tone",$0d,$0a
>127a	3a 20 50 6c 61 79 20 61 20 74 6f 6e 65 0d 0a
>1289	07 44 69 6e 67 20 5b 50		    .text $07,"Ding [Pass if you heard a 'ding' sound.]",$0d,$0a
>1291	61 73 73 20 69 66 20 79 6f 75 20 68 65 61 72 64
>12a1	20 61 20 27 64 69 6e 67 27 20 73 6f 75 6e 64 2e
>12b1	5d 0d 0a
>12b4	0a 0a				    .byte $0a,$0a
>12b6	00				    .byte 0
>12b7	24 30 38 20 42 53 3a 20		    .text "$08 BS: Backspace",$0d,$0a
>12bf	42 61 63 6b 73 70 61 63 65 0d 0a
>12ca	42 61 63 6b 73 70 61 63		    .text "Backspace test [should say 'pass' twice]: failpass"
>12d2	65 20 74 65 73 74 20 5b 73 68 6f 75 6c 64 20 73
>12e2	61 79 20 27 70 61 73 73 27 20 74 77 69 63 65 5d
>12f2	3a 20 66 61 69 6c 70 61 73 73
>12fc	08 08 08 08 08 08 08 08		    .text $08,$08,$08,$08,$08,$08,$08,$08,"pass",$0d,$0a
>1304	70 61 73 73 0d 0a
>130a	0a 0a				    .byte $0a,$0a
>130c	00				    .byte 0
>130d	24 30 39 20 48 54 3a 20		    .text "$09 HT: Horizontal tab",$0d,$0a
>1315	48 6f 72 69 7a 6f 6e 74 61 6c 20 74 61 62 0d 0a
>1325	20 20 20 20 20 20 20 20		    .text "         |         |         |         |",$0d,$0a
>132d	20 7c 20 20 20 20 20 20 20 20 20 7c 20 20 20 20
>133d	20 20 20 20 20 7c 20 20 20 20 20 20 20 20 20 7c
>134d	0d 0a
>134f	62 61 72 73 09 7c 73 68		    .text "bars",9,"|should",9,"|line",9,"|up",9,"|",$0d,$0a
>1357	6f 75 6c 64 09 7c 6c 69 6e 65 09 7c 75 70 09 7c
>1367	0d 0a
>1369	0a 0a				    .byte $0a,$0a
>136b	00				    .byte 0
>136c	24 31 30 20 4c 46 3a 20		    .text "$10 LF: moves the cursor down one line",$0d,$0a
>1374	6d 6f 76 65 73 20 74 68 65 20 63 75 72 73 6f 72
>1384	20 64 6f 77 6e 20 6f 6e 65 20 6c 69 6e 65 0d 0a
>1394	4c 69 6e 65 20 31 20 5c		    .text "Line 1 ",$5C,$0a
>139c	0a
>139d	5c 20 4c 69 6e 65 20 32		    .text         $5C," Line 2",$0d,$0a
>13a5	0d 0a
>13a7	54 68 65 20 62 61 63 6b		    .text "The backslashes should line up."
>13af	73 6c 61 73 68 65 73 20 73 68 6f 75 6c 64 20 6c
>13bf	69 6e 65 20 75 70 2e
>13c6	0d 0a 0a			    .text $0d,$0a,$0a
>13c9	00				    .byte 0
>13ca	24 31 33 20 43 52 3a 20		    .text "$13 CR: move to start of line",$0d,$0a,$0a
>13d2	6d 6f 76 65 20 74 6f 20 73 74 61 72 74 20 6f 66
>13e2	20 6c 69 6e 65 0d 0a 0a
>13ea	20 20 20 20 20 20 20 20		    .text "          <- CR TEST [should be on same line]",$0d
>13f2	20 20 3c 2d 20 43 52 20 54 45 53 54 20 5b 73 68
>1402	6f 75 6c 64 20 62 65 20 6f 6e 20 73 61 6d 65 20
>1412	6c 69 6e 65 5d 0d
>1418	43 52 20 54 45 53 54 20		    .text "CR TEST ->",$0D,$0A
>1420	2d 3e 0d 0a
>1424	0a 0a				    .byte $0a,$0a
>1426	00				    .byte 0
>1427	01				    .byte 1
>1428	1b 5b 32 30 3b 32 30 48		    .text 27,"[20;20H"
>1430	1b 5b 33 33 6d			    .text 27,"[33m"
>1435	45 44 20 20 63 75 72 73		    .text "ED  cursor to end ->"
>143d	6f 72 20 74 6f 20 65 6e 64 20 2d 3e
>1449	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>1451	1b 5b 39 30 6d			    .text 27,"[90m"
>1456	5b 54 68 69 73 20 74 65		    .text "[This text should disappear]"
>145e	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>146e	65 61 72 5d
>1472	00				    .byte 0
>1473	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>147b	1b 5b 30 4a			    .text 27,"[0J"
>147f	00				    .byte 0
>1480	01				    .byte 1
>1481	1b 5b 32 30 3b 31 37 48		    .text 27,"[20;17H"
>1489	1b 5b 39 30 6d			    .text 27,"[90m"
>148e	5b 54 68 69 73 20 73 68		    .text "[This should disappear]"
>1496	6f 75 6c 64 20 64 69 73 61 70 70 65 61 72 5d
>14a5	1b 5b 33 33 6d			    .text 27,"[33m"
>14aa	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>14b2	3c 2d 20 45 44 20 73 74		    .text "<- ED start to cursor",$0D,$0A
>14ba	61 72 74 20 74 6f 20 63 75 72 73 6f 72 0d 0a
>14c9	1b 5b 36 30 3b 35 34 48		    .text 27,"[60;54H"
>14d1	54 68 69 73 20 73 68 6f		    .text "This should remain visible."
>14d9	75 6c 64 20 72 65 6d 61 69 6e 20 76 69 73 69 62
>14e9	6c 65 2e
>14ec	00				    .byte 0
>14ed	1b 5b 32 30 3b 33 39 48		    .text 27,"[20;39H"
>14f5	1b 5b 31 4a			    .text 27,"[1J"
>14f9	00				    .byte 0
>14fa	1b 5b 32 4a			    .text 27,"[2J"
>14fe	1b 5b 31 30 3b 32 37 48		    .text 27,"[10;27H   Erase full screen"
>1506	20 20 20 45 72 61 73 65 20 66 75 6c 6c 20 73 63
>1516	72 65 65 6e
>151a	1b 5b 31 31 3b 32 37 48		    .text 27,"[11;27H Screen should be clear"
>1522	20 53 63 72 65 65 6e 20 73 68 6f 75 6c 64 20 62
>1532	65 20 63 6c 65 61 72
>1539	1b 5b 31 32 3b 32 37 48		    .text 27,"[12;27H[Aside from this message]"
>1541	5b 41 73 69 64 65 20 66 72 6f 6d 20 74 68 69 73
>1551	20 6d 65 73 73 61 67 65 5d
>155a	00				    .byte 0
>155b	01				    .byte 1
>155c	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>1564	1b 5b 33 33 6d			    .text 27,"[33m"
>1569	45 4c 20 63 75 72 73 6f		    .text "EL cursor to to end of line ->"
>1571	72 20 74 6f 20 74 6f 20 65 6e 64 20 6f 66 20 6c
>1581	69 6e 65 20 2d 3e
>1587	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>158f	1b 5b 39 30 6d			    .text 27,"[90m"
>1594	5b 54 68 69 73 20 74 65		    .text "[This text should disappear]"
>159c	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>15ac	65 61 72 5d
>15b0	00				    .byte 0
>15b1	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>15b9	1b 5b 30 4b			    .text 27,"[0K"
>15bd	00				    .byte 0
>15be	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>15c6	1b 5b 39 30 6d			    .text 27,"[90m"
>15cb	20 20 54 68 69 73 20 74		    .text "  This text should disappear ->"
>15d3	65 78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70
>15e3	70 65 61 72 20 2d 3e
>15ea	1b 5b 32 30 3b 34 31 48		    .text 27,"[20;41H"
>15f2	1b 5b 33 33 6d			    .text 27,"[33m"
>15f7	3c 2d 20 45 4c 20 73 74		    .text "<- EL start to cursor"
>15ff	61 72 74 20 74 6f 20 63 75 72 73 6f 72
>160c	00				    .byte 0
>160d	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H"
>1615	1b 5b 31 4b			    .text 27,"[1K"
>1619	00				    .byte 0
>161a	1b 5b 32 30 48			    .text 27,"[20H"
>161f	1b 5b 33 36 6d			    .text 27,"[36m"
>1624	2e 2e 2e 2e 2c 2e 2e 2e		    .text "....,....1....,....2....,....3....,....4....,....5....,....6....,....7....,....8"
>162c	2e 31 2e 2e 2e 2e 2c 2e 2e 2e 2e 32 2e 2e 2e 2e
>163c	2c 2e 2e 2e 2e 33 2e 2e 2e 2e 2c 2e 2e 2e 2e 34
>164c	2e 2e 2e 2e 2c 2e 2e 2e 2e 35 2e 2e 2e 2e 2c 2e
>165c	2e 2e 2e 36 2e 2e 2e 2e 2c 2e 2e 2e 2e 37 2e 2e
>166c	2e 2e 2c 2e 2e 2e 2e 38
>1674	1b 5b 32 30 3b 31 38 48		    .text 27,"[20;18H"
>167c	1b 5b 33 33 6d			    .text 27,"[33m"
>1681	5b 45 4c 20 65 6e 74 69		    .text "[EL entire line. This text should disappear]"
>1689	72 65 20 6c 69 6e 65 2e 20 54 68 69 73 20 74 65
>1699	78 74 20 73 68 6f 75 6c 64 20 64 69 73 61 70 70
>16a9	65 61 72 5d
>16ad	00				    .byte 0
>16ae	1b 5b 32 30 3b 31 30 48		    .text 27,"[20;10H"
>16b6	1b 5b 32 4b			    .text 27,"[2K"
>16ba	00				    .byte 0
>16bb	01				    .byte 1
>16bc	1b 5b 48 c5 20 48 4f 4d		    .text 27,"[H",$c5," HOME POSITION",$0D,$0A
>16c4	45 20 50 4f 53 49 54 49 4f 4e 0d 0a
>16d0	00 01				    .byte 0,1
>16d2	1b 5b 32 30 3b 34 30 48		    .text 27,"[20;40H",$c5," Row 20 Col 40",$0d,$0a
>16da	c5 20 52 6f 77 20 32 30 20 43 6f 6c 20 34 30 0d
>16ea	0a
>16eb	00 01				    .byte 0,1
>16ed	1b 5b 36 30 3b 38 30 48		    .text 27,"[60;80H",$c5
>16f5	c5
>16f6	1b 5b 36 30 3b 36 35 48		    .text 27,"[60;65HRow 60 Col 80"
>16fe	52 6f 77 20 36 30 20 43 6f 6c 20 38 30
>170b	00 01				    .byte 0,1
>170d	1b 5b 34 3b 35 48 c5 20		    .text 27,"[4;5H",$c5," Row 4 Col 5",$0d,$0a
>1715	52 6f 77 20 34 20 43 6f 6c 20 35 0d 0a
>1722	00 01				    .byte 0,1
>1724	1b 5b 31 30 48 2b 20 4c		    .text 27,"[10H+ Line 10, column 1 (no column)"
>172c	69 6e 65 20 31 30 2c 20 63 6f 6c 75 6d 6e 20 31
>173c	20 28 6e 6f 20 63 6f 6c 75 6d 6e 29
>1748	00 01				    .byte 0,1
>174a	1b 5b 3b 34 30 48 2b 20		    .text 27,"[;40H+ Col 40 (no row)  "
>1752	43 6f 6c 20 34 30 20 28 6e 6f 20 72 6f 77 29 20
>1762	20
>1763	00				    .byte 0
>1764	01				    .byte 1
>1765	1b 5b 32 39 3b 32 37 48		    .text 27,"[29;27HPress a key to restart test"
>176d	50 72 65 73 73 20 61 20 6b 65 79 20 74 6f 20 72
>177d	65 73 74 61 72 74 20 74 65 73 74
>1788	00				    .byte 0
>1789	1a 00 00 00 00			    .byte 26,0,0,0,0

;******  Processing file: ANSI_DRIVER.ASM

=$b000					ScrnAdr = $B000  ; Address of screen buffer in VERA
=$9f20					vera_addr0 = $9f20    ; low byte of display address (col)
=$9f21					vera_addr1 = $9f21    ; middle byte of display address (row)
=$9f22					vera_addr2 = $9f22    ; high byte of display address (bank + increment)
=$9f23					vera_data0 = $9f23    ; VERA data port 0
=$9f24					vera_data1 = $9f24    ; VERA data port 1
=$9f25					vera_dcsel = $9f25    ; VERA data select register
=$ff6e					jsrfar = $FF6E
=$00					bank_select_ram = $00
=$01					bank_select_rom = $01
=$0a					bank_audio = $0A
=$c063					ym_init = $C063
=$c003					bas_fmnote = $C003
=$c000					bas_fmfreq = $c000
=$c00f					bas_psgfreq = $c00f
=$c069					ym_loadpatch = $c069
=$02					R0      = $02
=$02					R0L     = $02
=$03					R0H     = $03
=$04					R1      = $04
=$04					R1L     = $04
=$05					R1H     = $05
=$04					R2      = $04
=$04					R2L     = $04
=$05					R2H     = $05
=$11					colors_bank = $11   ;incr=1, bank=1
=$fa00					colors_addr = $FA00
=$07					default_color_fg = $07
=$00					default_color_bg = $00
=$02					ansi_strptr   = R0  ; string pointer for prints procedure
.178e					ansi_init:
.178e	a9 0f		lda #$0f	    lda #15     ; ISO mode PETSCII character
.1790	20 d2 ff	jsr $ffd2	    jsr $FFD2   ; print it
.1793	a9 07		lda #$07	    lda #7
.1795	20 62 ff	jsr $ff62	    jsr $ff62 ; screen_set_charset
.1798	a9 00		lda #$00	    lda #<colors_addr
.179a	8d 20 9f	sta $9f20	    sta vera_addr0
.179d	a9 fa		lda #$fa	    lda #>colors_addr
.179f	8d 21 9f	sta $9f21	    sta vera_addr1
.17a2	a9 11		lda #$11	    lda #colors_bank
.17a4	8d 22 9f	sta $9f22	    sta vera_addr2
.17a7	a2 00		ldx #$00	    ldx #0
.17a9	bd ea 1c	lda $1cea,x	-   lda palette_data, x
.17ac	8d 23 9f	sta $9f23	    sta vera_data0
.17af	e8		inx		    inx
.17b0	e0 20		cpx #$20	    cpx #palette_end - palette_data
.17b2	90 f5		bcc $17a9	    bcc -
.17b4	9c 52 1c	stz $1c52	    stz cur_mode        ; reset colors and attributes
.17b7	a9 07		lda #$07	    lda #default_color_fg  ; default color is white on black
.17b9	8d 50 1c	sta $1c50	    sta cur_color
.17bc	20 6e ff	jsr $ff6e	    jsr jsrfar  ; $FF6E
>17bf	63 c0				    .word ym_init ; $C063
>17c1	0a				    .byte bank_audio
.17c2	a2 0d		ldx #$0d	    ldx #$0d
.17c4	38		sec		    sec
.17c5	20 6e ff	jsr $ff6e	    jsr jsrfar
>17c8	69 c0				    .word ym_loadpatch
>17ca	0a				    .byte bank_audio
.17cb	60		rts		    rts
.17cc					ansi_locate:
.17cc	48		pha		    pha
.17cd	8e 4c 1c	stx $1c4c	    stx csr_col
.17d0	8c 4d 1c	sty $1c4d	    sty csr_row
.17d3	20 13 18	jsr $1813	    jsr load_addr_vector
.17d6	68		pla		    pla
.17d7	60		rts		    rts
.17d8					vera_set_address_0:
.17d8	9c 25 9f	stz $9f25	    stz vera_dcsel        ; work with data port 0
.17db	ad 5e 1c	lda $1c5e	    lda start_col
.17de	0a		asl a		    asl A
.17df	8d 20 9f	sta $9f20	    sta vera_addr0
.17e2	ad 5f 1c	lda $1c5f	    lda start_row
.17e5	18		clc		    clc
.17e6	6d 4f 1c	adc $1c4f	    adc csr_base
.17e9	8d 21 9f	sta $9f21	    sta vera_addr1
.17ec	ad 4e 1c	lda $1c4e	    lda csr_bank
.17ef	8d 22 9f	sta $9f22	    sta vera_addr2
.17f2	60		rts		    rts
.17f3					vera_set_address_1:
.17f3	a9 01		lda #$01	    lda #$01
.17f5	8d 25 9f	sta $9f25	    sta vera_dcsel        ; work with data port 0
.17f8	ad 5e 1c	lda $1c5e	    lda start_col
.17fb	0a		asl a		    asl A
.17fc	8d 20 9f	sta $9f20	    sta vera_addr0
.17ff	ad 62 1c	lda $1c62	    lda start_row2
.1802	18		clc		    clc
.1803	6d 4f 1c	adc $1c4f	    adc csr_base
.1806	8d 21 9f	sta $9f21	    sta vera_addr1
.1809	ad 4e 1c	lda $1c4e	    lda csr_bank
.180c	8d 22 9f	sta $9f22	    sta vera_addr2
.180f	9c 25 9f	stz $9f25	    stz vera_dcsel
.1812	60		rts		    rts
.1813					load_addr_vector:
.1813	9c 25 9f	stz $9f25	    stz vera_dcsel        ; work with data port 0
.1816	ad 4c 1c	lda $1c4c	    lda csr_col
.1819	0a		asl a		    asl A
.181a	8d 20 9f	sta $9f20	    sta vera_addr0
.181d	ad 4d 1c	lda $1c4d	    lda csr_row
.1820	18		clc		    clc
.1821	6d 4f 1c	adc $1c4f	    adc csr_base
.1824	8d 21 9f	sta $9f21	    sta vera_addr1
.1827	ad 4e 1c	lda $1c4e	    lda csr_bank
.182a	8d 22 9f	sta $9f22	    sta vera_addr2
.182d	60		rts		    rts
.182e					save_addr_vector:
.182e	9c 25 9f	stz $9f25	    stz vera_dcsel        ; work with data port 0
.1831	ad 20 9f	lda $9f20	    lda vera_addr0
.1834	4a		lsr a		    lsr A
.1835	8d 4c 1c	sta $1c4c	    sta csr_col
.1838	ad 21 9f	lda $9f21	    lda vera_addr1
.183b	38		sec		    sec
.183c	ed 4f 1c	sbc $1c4f	    sbc csr_base
.183f	8d 4d 1c	sta $1c4d	    sta csr_row
.1842	60		rts		    rts
.1843					ansi_print_str:
.1843	20 13 18	jsr $1813	    jsr load_addr_vector
.1846					prints_loop:
.1846	b2 02		lda ($02)	    lda (ansi_strptr)
.1848	f0 0b		beq $1855	    beq prints_done
.184a	20 5c 18	jsr $185c	    jsr ansi_chrout
.184d	e6 02		inc $02		        inc ansi_strptr
.184f	d0 02		bne $1853	        bne +
.1851	e6 03		inc $03		        inc ansi_strptr+1
.1853					    +
.1853	80 f1		bra $1846	    bra prints_loop
.1855					prints_done:
.1855	e6 02		inc $02		        inc ansi_strptr
.1857	d0 02		bne $185b	        bne +
.1859	e6 03		inc $03		        inc ansi_strptr+1
.185b					    +
.185b	60		rts		    rts
.185c					ansi_chrout:
.185c	ac 57 1c	ldy $1c57	    ldy param_index
.185f	c0 01		cpy #$01	    cpy #1
.1861	f0 78		beq $18db	    beq chrout_read_param
.1863	90 03		bcc $1868	    bcc +
.1865	4c eb 18	jmp $18eb	    jmp chrout_test_semi
.1868	c9 20		cmp #$20	+   cmp #' '
.186a	90 33		bcc $189f	    bcc do_control_char
.186c					just_print:
.186c	8d 23 9f	sta $9f23	    sta vera_data0
.186f	ad 50 1c	lda $1c50	    lda cur_color   ; get the current color
.1872	8d 23 9f	sta $9f23	    sta vera_data0
.1875	ee 4c 1c	inc $1c4c	    inc csr_col     ; moves cursor to the right one position
.1878					check_bounds:
.1878	ad 4c 1c	lda $1c4c	    lda csr_col
.187b	cd 53 1c	cmp $1c53	    cmp col_count
.187e	90 07		bcc $1887	    bcc check_row
.1880	ad 53 1c	lda $1c53	    lda col_count
.1883	3a		dec a		    dec A
.1884	8d 4c 1c	sta $1c4c	    sta csr_col
.1887					check_row:
.1887	ad 4d 1c	lda $1c4d	    lda csr_row
.188a	38		sec		    sec
.188b	ed 54 1c	sbc $1c54	    sbc row_count
.188e	90 0b		bcc $189b	    bcc check_done
.1890	1a		inc a		    inc a
.1891	20 e7 1b	jsr $1be7	    jsr do_scroll_up
.1894	ad 54 1c	lda $1c54	    lda row_count
.1897	3a		dec a		    dec a
.1898	8d 4d 1c	sta $1c4d	    sta csr_row
.189b					check_done:
.189b	20 13 18	jsr $1813	    jsr load_addr_vector
.189e					chrout_done:
.189e	60		rts		    rts
.189f					do_control_char:
.189f	c9 1b		cmp #$1b	    cmp #$1B ; ESC
.18a1	d0 06		bne $18a9	    bne +
.18a3	ee 57 1c	inc $1c57	    inc param_index
.18a6	4c 9e 18	jmp $189e	    jmp chrout_done
.18a9	c9 0a		cmp #$0a	+   cmp #$0A ; Line Feed
.18ab	d0 09		bne $18b6	    bne +
.18ad	ee 4d 1c	inc $1c4d	    inc csr_row
.18b0	20 13 18	jsr $1813	    jsr load_addr_vector
.18b3	4c 78 18	jmp $1878	    jmp check_bounds
.18b6	c9 0d		cmp #$0d	+   cmp #$0D ;CR
.18b8	d0 09		bne $18c3	    bne +
.18ba	9c 4c 1c	stz $1c4c	    stz csr_col
.18bd	20 13 18	jsr $1813	    jsr load_addr_vector
.18c0	4c 78 18	jmp $1878	    jmp check_bounds
.18c3	c9 07		cmp #$07	+   cmp #$07 ; bell
.18c5	d0 03		bne $18ca	    bne +
.18c7	4c c5 1a	jmp $1ac5	    jmp do_bell
.18ca	c9 08		cmp #$08	+   cmp #$08 ; backspace
.18cc	d0 03		bne $18d1	    bne +
.18ce	4c d9 1a	jmp $1ad9	    jmp do_bs
.18d1	c9 09		cmp #$09	+   cmp #$09 ; tab
.18d3	d0 03		bne $18d8	    bne +
.18d5	4c e8 1a	jmp $1ae8	    jmp do_tab
.18d8	4c 6c 18	jmp $186c	+   jmp just_print
.18db					chrout_read_param:
.18db	c9 5b		cmp #$5b	    cmp #'['
.18dd	d0 06		bne $18e5	    bne +
.18df	ee 57 1c	inc $1c57	    inc param_index
.18e2	4c 9e 18	jmp $189e	    jmp chrout_done
.18e5					+
.18e5	9c 57 1c	stz $1c57	    stz param_index
.18e8	4c 6c 18	jmp $186c	    jmp just_print
.18eb					chrout_test_semi:
.18eb	c9 3b		cmp #$3b	    cmp #';'
.18ed	d0 06		bne $18f5	    bne chrout_test_number
.18ef	ee 57 1c	inc $1c57	    inc param_index
.18f2	4c 9e 18	jmp $189e	    jmp chrout_done
.18f5					chrout_test_number:
.18f5	c9 30		cmp #$30	    cmp #'0'
.18f7	90 24		bcc $191d	    bcc chrout_not_number
.18f9	c9 3a		cmp #$3a	    cmp #'9'+1
.18fb	b0 20		bcs $191d	    bcs chrout_not_number
.18fd	38		sec		    sec
.18fe	e9 30		sbc #$30	    sbc #'0'
.1900	8d 5d 1c	sta $1c5d	    sta digit_1
.1903	b9 57 1c	lda $1c57,y	    lda parameters,Y
.1906	0a		asl a		    asl
.1907	0a		asl a		    asl
.1908	0a		asl a		    asl
.1909	8d 63 1c	sta $1c63	    sta mult_1
.190c	b9 57 1c	lda $1c57,y	    lda parameters,Y
.190f	0a		asl a		    asl
.1910	18		clc		    clc
.1911	6d 63 1c	adc $1c63	    adc mult_1
.1914	6d 5d 1c	adc $1c5d	    adc digit_1
.1917	99 57 1c	sta $1c57,y	    sta parameters,Y
.191a	4c 9e 18	jmp $189e	    jmp chrout_done
.191d					chrout_not_number:
.191d	4c 20 19	jmp $1920	    jmp do_CSI
.1920					do_CSI:
.1920	c9 41		cmp #$41	    cmp #'A'
.1922	f0 29		beq $194d	    beq do_CUU
.1924	c9 42		cmp #$42	    cmp #'B'
.1926	f0 3d		beq $1965	    beq do_CUD
.1928	c9 43		cmp #$43	    cmp #'C'
.192a	f0 51		beq $197d	    beq do_CUF
.192c	c9 44		cmp #$44	    cmp #'D'
.192e	f0 65		beq $1995	    beq do_CUB
.1930	c9 66		cmp #$66	    cmp #'f'
.1932	f0 79		beq $19ad	    beq do_CUP
.1934	c9 48		cmp #$48	    cmp #'H'
.1936	f0 75		beq $19ad	    beq do_CUP
.1938	c9 4a		cmp #$4a	    cmp #'J'
.193a	d0 03		bne $193f	    bne +
.193c	4c 18 1a	jmp $1a18	    jmp do_ED
.193f					+
.193f	c9 4b		cmp #$4b	    cmp #'K'
.1941	f0 7c		beq $19bf	    beq do_EL
.1943	c9 6d		cmp #$6d	    cmp #'m'
.1945	d0 03		bne $194a	    bne +
.1947	4c fb 1a	jmp $1afb	    jmp do_SGR
.194a					+
.194a	4c d2 1b	jmp $1bd2	    jmp cmd_done
.194d					do_CUU:
.194d	ad 59 1c	lda $1c59	    lda param_1
.1950	f0 0d		beq $195f	    beq +
.1952	ad 4d 1c	lda $1c4d	    lda csr_row
.1955	38		sec		    sec
.1956	ed 59 1c	sbc $1c59	    sbc param_1
.1959	8d 4d 1c	sta $1c4d	    sta csr_row
.195c	4c d2 1b	jmp $1bd2	    jmp cmd_done
.195f	ce 4d 1c	dec $1c4d	+   dec csr_row
.1962	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1965					do_CUD:
.1965	ad 59 1c	lda $1c59	    lda param_1
.1968	f0 0d		beq $1977	    beq +
.196a	ad 4d 1c	lda $1c4d	    lda csr_row
.196d	18		clc		    clc
.196e	6d 59 1c	adc $1c59	    adc param_1
.1971	8d 4d 1c	sta $1c4d	    sta csr_row
.1974	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1977	ee 4d 1c	inc $1c4d	+   inc csr_row
.197a	4c d2 1b	jmp $1bd2	    jmp cmd_done
.197d					do_CUF:
.197d	ad 59 1c	lda $1c59	    lda param_1
.1980	f0 0d		beq $198f	    beq +
.1982	ad 4c 1c	lda $1c4c	    lda csr_col
.1985	18		clc		    clc
.1986	6d 59 1c	adc $1c59	    adc param_1
.1989	8d 4c 1c	sta $1c4c	    sta csr_col
.198c	4c d2 1b	jmp $1bd2	    jmp cmd_done
.198f	ee 4c 1c	inc $1c4c	+   inc csr_col
.1992	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1995					do_CUB:
.1995	ad 59 1c	lda $1c59	    lda param_1
.1998	f0 0d		beq $19a7	    beq +
.199a	ad 4c 1c	lda $1c4c	    lda csr_col
.199d	38		sec		    sec
.199e	ed 59 1c	sbc $1c59	    sbc param_1
.19a1	8d 4c 1c	sta $1c4c	    sta csr_col
.19a4	4c d2 1b	jmp $1bd2	    jmp cmd_done
.19a7	ce 4c 1c	dec $1c4c	+   dec csr_col
.19aa	4c d2 1b	jmp $1bd2	    jmp cmd_done
.19ad					do_CUP:
.19ad	ae 5a 1c	ldx $1c5a	    ldx param_2
.19b0	f0 01		beq $19b3	    beq +
.19b2	ca		dex		    dex
.19b3	ac 59 1c	ldy $1c59	+   ldy param_1
.19b6	f0 01		beq $19b9	    beq +
.19b8	88		dey		    dey
.19b9	20 cc 17	jsr $17cc	+   jsr ansi_locate
.19bc	4c d2 1b	jmp $1bd2	    jmp cmd_done
.19bf					do_EL:
.19bf	ad 59 1c	lda $1c59	    lda param_1
.19c2	d0 1c		bne $19e0	    bne +
.19c4	ad 4c 1c	lda $1c4c	    lda csr_col
.19c7	8d 5e 1c	sta $1c5e	    sta start_col
.19ca	ad 4d 1c	lda $1c4d	    lda csr_row
.19cd	8d 5f 1c	sta $1c5f	    sta start_row
.19d0	ad 53 1c	lda $1c53	    lda col_count
.19d3	3a		dec a		    dec a
.19d4	8d 60 1c	sta $1c60	    sta end_col
.19d7	ad 4d 1c	lda $1c4d	    lda csr_row
.19da	8d 61 1c	sta $1c61	    sta end_row
.19dd	4c 70 1a	jmp $1a70	    jmp do_erase
.19e0	c9 01		cmp #$01	+   cmp #1
.19e2	d0 18		bne $19fc	    bne +
.19e4	9c 5e 1c	stz $1c5e	    stz start_col
.19e7	ad 4d 1c	lda $1c4d	    lda csr_row
.19ea	8d 5f 1c	sta $1c5f	    sta start_row
.19ed	ad 4c 1c	lda $1c4c	    lda csr_col
.19f0	8d 60 1c	sta $1c60	    sta end_col
.19f3	ad 4d 1c	lda $1c4d	    lda csr_row
.19f6	8d 61 1c	sta $1c61	    sta end_row
.19f9	4c 70 1a	jmp $1a70	    jmp do_erase
.19fc	c9 02		cmp #$02	+   cmp #2
.19fe	d0 39		bne $1a39	    bne +
.1a00	9c 5e 1c	stz $1c5e	    stz start_col
.1a03	ad 4d 1c	lda $1c4d	    lda csr_row
.1a06	8d 5f 1c	sta $1c5f	    sta start_row
.1a09	ad 53 1c	lda $1c53	    lda col_count
.1a0c	8d 60 1c	sta $1c60	    sta end_col
.1a0f	ad 4d 1c	lda $1c4d	    lda csr_row
.1a12	8d 61 1c	sta $1c61	    sta end_row
.1a15	4c 70 1a	jmp $1a70	    jmp do_erase
.1a18					do_ED:
.1a18	ad 59 1c	lda $1c59	    lda param_1
.1a1b	d0 1c		bne $1a39	    bne +
.1a1d	ad 4c 1c	lda $1c4c	    lda csr_col
.1a20	8d 5e 1c	sta $1c5e	    sta start_col
.1a23	ad 4d 1c	lda $1c4d	    lda csr_row
.1a26	8d 5f 1c	sta $1c5f	    sta start_row
.1a29	ad 53 1c	lda $1c53	    lda col_count
.1a2c	8d 60 1c	sta $1c60	    sta end_col
.1a2f	ad 54 1c	lda $1c54	    lda row_count
.1a32	3a		dec a		    dec a
.1a33	8d 61 1c	sta $1c61	    sta end_row
.1a36	4c 70 1a	jmp $1a70	    jmp do_erase
.1a39	c9 01		cmp #$01	+   cmp #1
.1a3b	d0 15		bne $1a52	    bne +
.1a3d	9c 5e 1c	stz $1c5e	    stz start_col
.1a40	9c 5f 1c	stz $1c5f	    stz start_row
.1a43	ad 4c 1c	lda $1c4c	    lda csr_col
.1a46	8d 60 1c	sta $1c60	    sta end_col
.1a49	ad 4d 1c	lda $1c4d	    lda csr_row
.1a4c	8d 61 1c	sta $1c61	    sta end_row
.1a4f	4c 70 1a	jmp $1a70	    jmp do_erase
.1a52	c9 02		cmp #$02	+   cmp #2
.1a54	d0 17		bne $1a6d	    bne +
.1a56					ansi_cls:
.1a56	9c 5e 1c	stz $1c5e	    stz start_col
.1a59	9c 5f 1c	stz $1c5f	    stz start_row
.1a5c	ad 53 1c	lda $1c53	    lda col_count
.1a5f	3a		dec a		    dec a
.1a60	8d 60 1c	sta $1c60	    sta end_col
.1a63	ad 54 1c	lda $1c54	    lda row_count
.1a66	3a		dec a		    dec a
.1a67	8d 61 1c	sta $1c61	    sta end_row
.1a6a	4c 70 1a	jmp $1a70	    jmp do_erase
.1a6d	4c d2 1b	jmp $1bd2	+   jmp cmd_done
.1a70					do_erase:
.1a70	ae 51 1c	ldx $1c51	    ldx cur_char
.1a73	ac 50 1c	ldy $1c50	    ldy cur_color
.1a76					erase_first_line:
.1a76	9c 25 9f	stz $9f25	    stz vera_dcsel
.1a79	ad 5e 1c	lda $1c5e	    lda start_col
.1a7c	0a		asl a		    asl
.1a7d	8d 20 9f	sta $9f20	    sta vera_addr0
.1a80	ad 5f 1c	lda $1c5f	    lda work_row
.1a83	18		clc		    clc
.1a84	6d 4f 1c	adc $1c4f	    adc csr_base
.1a87	8d 21 9f	sta $9f21	    sta vera_addr1
.1a8a	ad 4e 1c	lda $1c4e	    lda csr_bank
.1a8d	8d 22 9f	sta $9f22	    sta vera_addr2
.1a90	ad 60 1c	lda $1c60	    lda end_col     ; number of rows to clear
.1a93	38		sec		    sec
.1a94	ed 5e 1c	sbc $1c5e	    sbc start_col
.1a97	1a		inc a		    inc a
.1a98					erase_fill_line:
.1a98	8e 23 9f	stx $9f23	    stx vera_data0
.1a9b	8c 23 9f	sty $9f23	    sty vera_data0
.1a9e	3a		dec a		    dec a
.1a9f	d0 f7		bne $1a98	    bne erase_fill_line
.1aa1	20 ce 1b	jsr $1bce	    jsr do_callback  ; give serial driver the chance to empty the FIFO
.1aa4	9c 20 9f	stz $9f20	    stz vera_addr0
.1aa7	ee 21 9f	inc $9f21	    inc vera_addr1
.1aaa	ee 5f 1c	inc $1c5f	    inc work_row
.1aad	ad 5f 1c	lda $1c5f	    lda work_row
.1ab0	cd 61 1c	cmp $1c61	    cmp end_row
.1ab3	f0 07		beq $1abc	    beq erase_last_line
.1ab5	b0 0b		bcs $1ac2	    bcs erase_done
.1ab7	ad 53 1c	lda $1c53	    lda col_count ; number of columns to delete
.1aba	80 dc		bra $1a98	    bra erase_fill_line
.1abc					erase_last_line:
.1abc	ad 60 1c	lda $1c60	    lda end_col ; for Erase Line, only erase up to cursor
.1abf	1a		inc a		    inc a
.1ac0	80 d6		bra $1a98	    bra erase_fill_line
.1ac2					erase_done:
.1ac2	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1ac5					do_bell:
.1ac5	a9 0a		lda #$0a	    lda #bank_audio
.1ac7	85 01		sta $01		    sta bank_select_rom
.1ac9	a9 00		lda #$00	    lda #$00 ; channel 0
.1acb	a2 00		ldx #$00	    ldx #$00 ; 512 Hz
.1acd	a0 02		ldy #$02	    ldy #$02 ;
.1acf	18		clc		    clc
.1ad0	20 6e ff	jsr $ff6e	    jsr jsrfar  ; $FF6E
>1ad3	00 c0				    .word bas_fmfreq ; $C063
>1ad5	0a				    .byte bank_audio
.1ad6	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1ad9					do_bs:
.1ad9	ad 4c 1c	lda $1c4c	    lda csr_col
.1adc	f0 07		beq $1ae5	    beq +
.1ade	3a		dec a		    dec A
.1adf	8d 4c 1c	sta $1c4c	    sta csr_col
.1ae2	20 13 18	jsr $1813	    jsr load_addr_vector
.1ae5	4c d2 1b	jmp $1bd2	+   jmp cmd_done
.1ae8					do_tab:
.1ae8	ae 4c 1c	ldx $1c4c	    ldx csr_col
.1aeb	ca		dex		    dex
.1aec	e8		inx		-   inx
.1aed	bd 68 1c	lda $1c68,x	    lda tab_stops,X
.1af0	10 fa		bpl $1aec	    bpl -
.1af2	8e 4c 1c	stx $1c4c	    stx csr_col
.1af5	20 13 18	jsr $1813	    jsr load_addr_vector
.1af8	4c d2 1b	jmp $1bd2	    jmp cmd_done
.1afb					do_SGR:
.1afb	a2 02		ldx #$02	    ldx #2
.1afd					sgr_loop:
.1afd	bd 57 1c	lda $1c57,x	    lda parameters, x
.1b00	d0 0b		bne $1b0d	    bne +         ;0: reset all modes, styles, and colors
.1b02	9c 52 1c	stz $1c52	    stz cur_mode
.1b05	a9 07		lda #$07	    lda #default_color_fg
.1b07	8d 50 1c	sta $1c50	    sta cur_color
.1b0a	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b0d	c9 1e		cmp #$1e	+   cmp #30
.1b0f	b0 1e		bcs $1b2f	    bcs sgr_30
.1b11	c9 01		cmp #$01	    cmp #1  ; bold
.1b13	d0 0b		bne $1b20	    bne +
.1b15	ad 50 1c	lda $1c50	    lda cur_color
.1b18	09 08		ora #$08	    ora #$08
.1b1a	8d 50 1c	sta $1c50	    sta cur_color
.1b1d	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b20	c9 16		cmp #$16	+   cmp #22
.1b22	d0 0b		bne $1b2f	    bne +
.1b24	ad 50 1c	lda $1c50	    lda cur_color
.1b27	29 f7		and #$f7	    and #$F7 ; remove bright bit
.1b29	8d 50 1c	sta $1c50	    sta cur_color
.1b2c	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b2f					+
.1b2f					sgr_30:
.1b2f	c9 26		cmp #$26	    cmp #38
.1b31	b0 14		bcs $1b47	    bcs +
.1b33	38		sec		    sec
.1b34	e9 1e		sbc #$1e	    sbc #30
.1b36	8d 59 1c	sta $1c59	    sta param_1
.1b39	ad 50 1c	lda $1c50	    lda cur_color
.1b3c	29 f0		and #$f0	    and #$F0
.1b3e	0d 59 1c	ora $1c59	    ora param_1
.1b41	8d 50 1c	sta $1c50	    sta cur_color
.1b44	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b47	c9 27		cmp #$27	+   cmp #39
.1b49	d0 0d		bne $1b58	    bne +
.1b4b	ad 50 1c	lda $1c50	    lda cur_color
.1b4e	29 f0		and #$f0	    and #$F0
.1b50	09 07		ora #$07	    ora #default_color_fg
.1b52	8d 50 1c	sta $1c50	    sta cur_color
.1b55	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b58					+
.1b58					sgr_40:
.1b58	c9 30		cmp #$30	    cmp #48
.1b5a	b0 18		bcs $1b74	    bcs +
.1b5c	38		sec		    sec
.1b5d	e9 28		sbc #$28	    sbc #40
.1b5f	0a		asl a		    asl
.1b60	0a		asl a		    asl
.1b61	0a		asl a		    asl
.1b62	0a		asl a		    asl
.1b63	8d 59 1c	sta $1c59	    sta param_1
.1b66	ad 50 1c	lda $1c50	    lda cur_color
.1b69	29 0f		and #$0f	    and #$0F
.1b6b	0d 59 1c	ora $1c59	    ora param_1
.1b6e	8d 50 1c	sta $1c50	    sta cur_color
.1b71	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b74	c9 31		cmp #$31	+   cmp #49
.1b76	d0 0d		bne $1b85	    bne +
.1b78	ad 50 1c	lda $1c50	    lda cur_color
.1b7b	29 0f		and #$0f	    and #$0F
.1b7d	09 00		ora #$00	    ora #default_color_bg
.1b7f	8d 50 1c	sta $1c50	    sta cur_color
.1b82	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1b85					+
.1b85	c9 5a		cmp #$5a	    cmp #90
.1b87	90 18		bcc $1ba1	    bcc +
.1b89	c9 62		cmp #$62	    cmp #98
.1b8b	b0 14		bcs $1ba1	    bcs +
.1b8d	38		sec		    sec
.1b8e	e9 52		sbc #$52	    sbc #82
.1b90	8d 59 1c	sta $1c59	    sta param_1
.1b93	ad 50 1c	lda $1c50	    lda cur_color
.1b96	29 f0		and #$f0	    and #$F0
.1b98	0d 59 1c	ora $1c59	    ora param_1
.1b9b	8d 50 1c	sta $1c50	    sta cur_color
.1b9e	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1ba1					+
.1ba1					sgr_100:
.1ba1	c9 6c		cmp #$6c	    cmp #108
.1ba3	b0 18		bcs $1bbd	    bcs +
.1ba5	38		sec		    sec
.1ba6	e9 5c		sbc #$5c	    sbc #92
.1ba8	0a		asl a		    asl
.1ba9	0a		asl a		    asl
.1baa	0a		asl a		    asl
.1bab	0a		asl a		    asl
.1bac	8d 59 1c	sta $1c59	    sta param_1
.1baf	ad 50 1c	lda $1c50	    lda cur_color
.1bb2	29 f0		and #$f0	    and #$F0
.1bb4	0d 59 1c	ora $1c59	    ora param_1
.1bb7	8d 50 1c	sta $1c50	    sta cur_color
.1bba	4c bd 1b	jmp $1bbd	    jmp sgr_next
.1bbd					+
.1bbd					sgr_next:
.1bbd	e8		inx		    inx
.1bbe	ec 57 1c	cpx $1c57	    cpx param_index
.1bc1	b0 03		bcs $1bc6	    bcs +
.1bc3	4c fd 1a	jmp $1afd	    jmp sgr_loop
.1bc6	d0 03		bne $1bcb	+   bne +
.1bc8	4c fd 1a	jmp $1afd	    jmp sgr_loop
.1bcb	4c d2 1b	jmp $1bd2	+   jmp cmd_done
.1bce					do_callback:
.1bce	6c 0a 1d	jmp ($1d0a)	    jmp (callback_addr)
.1bd1					empty_callback:
.1bd1	60		rts		    RTS
.1bd2					cmd_done:
.1bd2	9c 57 1c	stz $1c57	    stz param_index
.1bd5	9c 58 1c	stz $1c58	    stz param_0
.1bd8	9c 59 1c	stz $1c59	    stz param_1
.1bdb	9c 5a 1c	stz $1c5a	    stz param_2
.1bde	4c 78 18	jmp $1878	    jmp check_bounds
.1be1					csr_blink_off:
.1be1	60		rts		    rts
.1be2					csr_blink_on:
.1be2	60		rts		    rts
.1be3					csr_blink_toggle:
.1be3	60		rts		    rts
.1be4					csr_blink_wait:
.1be4	60		rts		    rts
.1be5					csr_hide:
.1be5	60		rts		    rts
.1be6					csr_show:
.1be6	60		rts		    rts
.1be7					do_scroll_up:
.1be7	8d 62 1c	sta $1c62	    sta start_row2
.1bea	9c 5f 1c	stz $1c5f	    stz start_row
.1bed	9c 5e 1c	stz $1c5e	    stz start_col
.1bf0	ad 53 1c	lda $1c53	    lda col_count
.1bf3	3a		dec a		    dec A
.1bf4	8d 60 1c	sta $1c60	    sta end_col
.1bf7	20 d8 17	jsr $17d8	    jsr vera_set_address_0
.1bfa	20 f3 17	jsr $17f3	    jsr vera_set_address_1
.1bfd	ad 54 1c	lda $1c54	    lda row_count
.1c00	38		sec		    sec
.1c01	ed 62 1c	sbc $1c62	    sbc start_row2
.1c04	a8		tay		    tay
.1c05	ad 53 1c	lda $1c53	    lda col_count
.1c08	0a		asl a		    asl
.1c09	aa		tax		    tax
.1c0a	ad 24 9f	lda $9f24	-   lda vera_data1
.1c0d	8d 23 9f	sta $9f23	    sta vera_data0
.1c10	ca		dex		    dex
.1c11	d0 f7		bne $1c0a	    bne -
.1c13	ee 5f 1c	inc $1c5f	    inc work_row
.1c16	ee 62 1c	inc $1c62	    inc work_row2
.1c19	20 d8 17	jsr $17d8	    jsr vera_set_address_0
.1c1c	20 f3 17	jsr $17f3	    jsr vera_set_address_1
.1c1f	88		dey		    dey
.1c20	d0 e8		bne $1c0a	    bne -
.1c22	ae 51 1c	ldx $1c51	    ldx cur_char
.1c25	ac 50 1c	ldy $1c50	    ldy cur_color
.1c28	ad 53 1c	lda $1c53	    lda col_count
.1c2b					scroll_fill_line:
.1c2b	ad 53 1c	lda $1c53	    lda col_count ; number of columns to delete
.1c2e	9c 20 9f	stz $9f20	    stz vera_addr0
.1c31	ee 21 9f	inc $9f21	    inc vera_addr1
.1c34	8e 23 9f	stx $9f23	-   stx vera_data0
.1c37	8c 23 9f	sty $9f23	    sty vera_data0
.1c3a	3a		dec a		    dec a
.1c3b	d0 f7		bne $1c34	    bne -
.1c3d	20 ce 1b	jsr $1bce	    jsr do_callback  ; give serial driver the chance to empty the FIFO
.1c40	ee 5f 1c	inc $1c5f	    inc work_row
.1c43	ad 5f 1c	lda $1c5f	    lda work_row
.1c46	cd 54 1c	cmp $1c54	    cmp row_count
.1c49	90 e0		bcc $1c2b	    bcc scroll_fill_line
.1c4b	60		rts		    rts
>1c4c	00				csr_col:       .byte $00  ; column number (addr bits 0-7)
>1c4d	00				csr_row:       .byte $00  ; row number (addr bits 8-15)
>1c4e	11				csr_bank:      .byte $11 ; auto-increment and addr bit 16.
>1c4f	b0				csr_base:      .byte $b0  ; base address of screen buffer
>1c50	01				cur_color:     .byte $01 ; currrent color attribute
>1c51	20				cur_char:      .byte ' ' ; fill character for clear screen
>1c52	00				cur_mode:      .byte $00 ; Modes bitmask (not implemented)
>1c53	50				col_count:     .byte 80 ; default screen width
>1c54	3c				row_count:     .byte 60 ; default screen height
>1c55	00				bank_rom_save: .byte 0 ; perserve the current ROM bank
>1c56	00				bank_ram_save: .byte 0 ; preserve the current RAM bank
=5					param_count = 5
.1c57					parameters:
>1c57	00				param_index:   .byte 0     ; >0 if parsing a terminal sequence
>1c58	00				param_0:       .byte 0     ; .X=1 [ or pain non-CSI command
>1c59	00				param_1:       .byte 0     ; .X=2 first parameter in CSI
>1c5a	00				param_2:       .byte 0     ; .X=3 second parameter in CSI
>1c5b	00				param_3:       .byte 0     ; .X=4 second parameter in CSI
>1c5c	00				param_4:       .byte 0     ; .X=5 second parameter in CSI
>1c5d	00				digit_1:       .byte 0     ; character being processed
.1c5e					incr_col:
.1c5e					start_col:
>1c5e	00				work_col:      .byte 0  ; current col for erase/scroll (0-79)
.1c5f					start_row:
>1c5f	00				work_row:      .byte 0  ; current row for erase/scroll (0-59)
>1c60	00				end_col:       .byte 0  ; end col for erase/scroll (0-79)
>1c61	00				end_row:       .byte 0  ; end row for erase/scroll (0-59)
.1c62					start_row2:
>1c62	00				work_row2:     .byte 0  ; data is copied FROM this row when scrolling
>1c63	00				mult_1:        .byte 0  ; temp slot for multiplication
>1c64	00				mult_2:        .byte 0  ; temp slot for multiplication
>1c65	00 00				cbs_next:      .word 0     ; the next time the cursor should blink
>1c67	00				cbs_blink:     .byte 0     ; Bitmask
>1c68	00 00 00 00 00 00 00 00		tab_stops:  .byte 0,0,0,0,0,0,0,0,0,$80
>1c70	00 80
>1c72	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1c7a	00 80
>1c7c	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1c84	00 80
>1c86	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1c8e	00 80
>1c90	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1c98	00 80
>1c9a	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1ca2	00 80
>1ca4	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cac	00 80
>1cae	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cb6	00 80
>1cb8	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cc0	00 80
>1cc2	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cca	00 80
>1ccc	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cd4	00 80
>1cd6	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,0,$80
>1cde	00 80
>1ce0	00 00 00 00 00 00 00 00		            .byte 0,0,0,0,0,0,0,0,  $FF,$FF
>1ce8	ff ff
.1cea					palette_data:
.1cea					palette_normal:
>1cea	00 00				              .byte $00, $00  ; black
>1cec	00 0a				              .byte $00, $0A  ; red
>1cee	a0 00				              .byte $A0, $00  ; green
>1cf0	a0 0a				              .byte $A0, $0A  ; yellow
>1cf2	0a 00				              .byte $0A, $00  ; blue
>1cf4	0a 0a				              .byte $0A, $0A  ; magenta
>1cf6	aa 00				              .byte $AA, $00  ; cyan
>1cf8	aa 0a				              .byte $AA, $0A  ; white
.1cfa					pallete_bright:
>1cfa	66 06				              .byte $66, $06  ; dark gray (light black)
>1cfc	00 0f				              .byte $00, $0f  ; light red
>1cfe	f0 00				              .byte $f0, $00  ; light green
>1d00	f0 0f				              .byte $f0, $0f  ; bright yellow
>1d02	0f 00				              .byte $0f, $00  ; light blue
>1d04	0f 0f				              .byte $0f, $0f  ; light magenta
>1d06	ff 00				              .byte $ff, $00  ; light cyan
>1d08	ff 0f				              .byte $ff, $0f  ; bright white
.1d0a					palette_end:
.1d0a					callback_addr:
>1d0a	d1 1b				            .word empty_callback

;******  Return to file: ANSI.ASM


;******  End of listing
